@page
@model Admin.Pages.Similar.IndexModel
@using Business.Dtos.JobPositions
@{
    ViewData["Title"] = "Similar Positions";
}

<div class="collapse @(Model.DisplayTopOfPage ? "show" : "")" id="collapsibleTop" aria-expanded="@(Model.DisplayTopOfPage ? "true" : "false")">
    <h1>Similar Positions</h1>
    <p>
        <a class="btn btn-dark" target="_blank" asp-page="ExecutiveSummary">Print Executive Summary</a>
    </p>

    @{
        string? filterValue = Model.Filter;
        if (filterValue != null)
        {
            filterValue = filterValue.Trim();
        }

        var itemsThatMatchFilter = Model.JobPositions.Where(e => (Model.Filter == null
            || e.JobTitleEng.ToLower().Contains(Model.Filter.ToLower())
            || e.JobTitleFre.ToLower().Contains(Model.Filter.ToLower())
            || e.LevelCode.ToLower().Contains(Model.Filter.ToLower()))
            && (e.Active == 1));

        itemsThatMatchFilter = itemsThatMatchFilter.OrderBy(x => x.JobTitleEng.ToLower()).OrderBy(x => x.LevelCode.ToLower()).ToList();
        var itemsList = itemsThatMatchFilter.ToList();
    }

    <form>
        <div class="form-actions no-color">
            <h6>
                <label for="Filter">Find positions:</label>
                <input type="text" asp-for="@Model.Filter" />
                <input type="submit" value="Search" class="btn btn-primary" /> 
                @if (!String.IsNullOrWhiteSpace(Model.Filter))
                {
                    <span><span class="vertical-bar">|</span> <a href="/Similar">Back to Full List</a></span>
                }
                @if (Model.DisplayNumberOfJobsForEachMatchingPercentage)
                {
                    <a class="pull-right" href="/Similar?numMatching=false&filter=@filterValue">Hide Number of Matching Positions Per Percentage</a>
                }
                else
                {
                    <a class="pull-right" href="/Similar?numMatching=true&filter=@filterValue">View Number of Matching Positions Per Percentage</a>
                }
            </h6>
        </div>
    </form>
</div>

@if (itemsThatMatchFilter.Any())
{
    <div id="table-container">
        <table class="table">
            <thead>
                <tr class="table-header-row text-center">
                    @if (Model.DisplayNumberOfJobsForEachMatchingPercentage)
                    {
                        <th class="col-1"><b class="sort-column-percents">Level</b></th>
                        <th class="col-3"><b class="sort-column-percents">Title English</b></th>
                        <th class="col-3"><b class="sort-column-percents">Title French</b></th>
                        <th class="col-3"><div class="four-col-grid"><span class="sort-column-percents">100%</span>
                            <span class="sort-column-percents">90%</span><span class="sort-column-percents">80%</span>
                            <span class="sort-column-percents">70%</span></div></th>
                        <th class="col-2">
                            <img src="@(Model.DisplayTopOfPage ? "/images/icons/up_arrow.png" : "/images/icons/down_arrow.png")" 
                            class="arrow-icon" data-toggle="collapse" data-target="#collapsibleTop" 
                            aria-expanded="@(Model.DisplayTopOfPage ? "true" : "false")" aria-controls="collapsibleTop" 
                            alt="@(Model.DisplayTopOfPage ? "Collapse" : "Expand") the top of the page" />
                        </th>
                    }
                    else
                    {
                        <th class="col-1"><b class="sort-column">Level</b></th>
                        <th class="col-4"><b class="sort-column">Title English</b></th>
                        <th class="col-5"><b class="sort-column">Title French</b></th>
                        <th class="col-2">
                            <img src="@(Model.DisplayTopOfPage ? "/images/icons/up_arrow.png" : "/images/icons/down_arrow.png")" 
                            class="arrow-icon" data-toggle="collapse" data-target="#collapsibleTop" 
                            aria-expanded="@(Model.DisplayTopOfPage ? "true" : "false")" aria-controls="collapsibleTop" 
                            alt="@(Model.DisplayTopOfPage ? "Collapse" : "Expand") the top of the page"
                            title="@(Model.DisplayTopOfPage ? "Collapse" : "Expand") the top of the page" />
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    var positionsWithoutSimilarOnes = new List<JobPositionDto>();
                    foreach (var item in itemsList)
                    {
                        if (!Model.SimilarSearchIds.Contains(item.JobTitleId))
                        {
                            positionsWithoutSimilarOnes.Add(item);
                        }
                    }
                    foreach (var pos in positionsWithoutSimilarOnes)
                    {
                        itemsList.Remove(pos);
                    }
                    positionsWithoutSimilarOnes.Reverse();
                    foreach (var pos in positionsWithoutSimilarOnes)
                    {
                        itemsList.Insert(0, pos);
                    }
                }
                @foreach (var item in itemsList)
                {
                    <tr>
                        <td class="text-center sort-percents">
                            @Html.DisplayFor(modelItem => item.LevelCode)
                        </td>
                        <td class="sort-percents">
                            @Html.DisplayFor(modelItem => item.JobTitleEng)
                        </td>
                        <td class="sort-percents">
                            @Html.DisplayFor(modelItem => item.JobTitleFre)
                        </td>
                        @if (Model.DisplayNumberOfJobsForEachMatchingPercentage)
                        {
                            <td class="four-col-grid">
                                @{
                                    foreach (var positionCount in 
                                                Model.NumberOfMatchingPositionsPerPecrentagePerPosition[item.JobTitleId].Split("&"))
                                    {
                                        <span class="sort-percents">@positionCount</span>
                                    }
                                }
                            </td>
                        }
                        @if (Model.SimilarSearchIds.Contains(item.JobTitleId))
                        {
                            <td class="text-center">
                                <a asp-page="./Details" asp-route-id="@item.JobTitleId">Details</a> |
                                <a asp-page="./Edit" asp-route-id="@item.JobTitleId">Edit</a>
                            </td>
                        }
                        else
                        {
                            <td class="text-center">
                                <a asp-page="./Create" asp-route-id="@item.JobTitleId">Create</a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    if (!string.IsNullOrWhiteSpace(Model.Filter))
    {
        <h4 class="no-results">No positions match the filter "@Model.Filter"</h4>
    }
    else
    {
        <h4 class="no-results">There are currently no positions</h4>
    }
}

