@page
@model Admin.Pages.Similar.IndexModel
@{
    ViewData["Title"] = "Index";
}

<h1>Similar Positions</h1>

<form>
    <div class="form-actions no-color">
        <h6>
            Find similar positions:
            <input type="text" asp-for="@Model.Filter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="../Index">Back to Full List</a>
        </h6>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th width="42%"><b>Title English</b></th>
            <th width="42%"><b>Title French</b></th>
            <th width="16%"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.JobPositions.Where(e => Model.Filter == null || e.JobTitleEng.ToLower().Contains(@Model.Filter.ToLower()) || e.JobTitleFre.ToLower().Contains(@Model.Filter.ToLower())))
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.JobTitleEng)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobTitleFre)
            </td>
            @if (Model.SimilarSearchIds.Contains(item.JobTitleId))
            {
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.JobTitleId">Edit</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-page="./Create" asp-route-id="@item.JobTitleId">Create</a>
                </td>
            }
        </tr>
        }
    </tbody>
</table>

