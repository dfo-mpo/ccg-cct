@page
@model Admin.Pages.Similar.EditModel
@using Admin.Data.PartialModels
@{
    ViewData["Title"] = "Edit";

    var routedataadd = new Dictionary<string, string> {
        {"id" , Model.Id.ToString() },
        {"levelvalue", Model.LevelValue },
        {"jobgroupid",Model.JobGroupId.ToString() },
        {"levelcode", Model.LevelCode },
        {"AddedOneHundredPercentIds", Model.AddedOneHundredPercentIds },
        {"AddedNinetyPercentIds", Model.AddedNinetyPercentIds },
        {"AddedEightyPercentIds", Model.AddedEightyPercentIds },
        {"AddedSeventyPercentIds", Model.AddedSeventyPercentIds },
        {"selectedjobpositionid",Model.SelectedJobPositionId.ToString() },
        {"subgroupcode", Model.SubGroupCode },
        {"subjobgroupId" , Model.SubJobGroupId.ToString() },
        {"jobgrouplevelid", Model.JobGroupLevelId.ToString() }
    };

    var editModel = new SimilarEditPartialModel
    {
        JobPositionId = Model.CurrentPosition.JobTitleId,
        RouteDataAdd = routedataadd,
        CurrentSelectedJobGroup = Model.CurrentSelectedJobGroup,
        LevelCode = Model.LevelCode,
        LevelValue = Model.LevelValue,
        OneHundredPercentIds = Model.AddedOneHundredPercentIds,
        NinetyPercentIds = Model.AddedNinetyPercentIds,
        EightyPercentIds = Model.AddedEightyPercentIds,
        SeventyPercentIds = Model.AddedSeventyPercentIds,
        JobGroupId = Model.JobGroupId,
        SubGroupCode = Model.SubGroupCode,
        JobGroupLevelId = Model.JobGroupLevelId,
        JobGroups = Model.JobGroups,
        JobGroupPositions = Model.JobGroupPositions,
        JobGroupLevelPositions = Model.JobGroupLevelPositions,
        AllActiveJobs = await Model.GetAllActiveJobs(),
        CurrentSelectedLevelCode = Model.LevelCode,
        CurrentSelectedPosition = Model.CurrentSelectedPosition,
        EditModel = Model
    };
}

<h1>Edit Similar Positions</h1>

<h4>Current Position: <a target="_blank" href="/Positions/Details?positionid=@Model.CurrentPosition.JobTitleId">@Model.CurrentPosition.JobGroupLevelCode @Model.CurrentPosition.JobTitleEng
    <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" /></a></h4>

<h4 class="medium-margin-top small-margin-bottom">Position actuelle: <a target="_blank" href="/Positions/Details?positionid=@Model.CurrentPosition.JobTitleId">
    @Model.CurrentPosition.JobGroupLevelCode @Model.CurrentPosition.JobTitleFre
    <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" /></a></h4>

<hr />

@if (Model.PercentSelection == "100")
{
    editModel.PercentMatch = 100;
    editModel.JobPositions = Model.AddedOneHundredPercentJobPositions;
    <partial name="_SimilarEdit" model="@editModel" />
}
else if (Model.PercentSelection == "90")
{
    editModel.PercentMatch = 90;
    editModel.JobPositions = Model.AddedNinetyPercentJobPositions;
    <partial name="_SimilarEdit" model="@editModel" />
}
else if (Model.PercentSelection == "80")
{
    editModel.PercentMatch = 80;
    editModel.JobPositions = Model.AddedEightyPercentJobPositions;
    <partial name="_SimilarEdit" model="@editModel" />
}
else if (Model.PercentSelection == "70")
{
    editModel.PercentMatch = 70;
    editModel.JobPositions = Model.AddedSeventyPercentJobPositions;
    <partial name="_SimilarEdit" model="@editModel" />
}

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}