@page
@model Admin.Pages.Positions.DetailsModel
@inject Admin.Data.FormattingService Formatter

@{
    ViewData["Title"] = "Details";
    bool expandableItemsOpenNewWindows = true;
}

<h1>Position Details / Détails du poste <span class="glyphicon glyphicon-save-file pull-right index-save-file-icon" onclick="print()"></span></h1>

<div>
    <h4>@Html.DisplayFor(model => model.Position.JobTitleEng)</h4>
    <h4 class="medium-margin-top small-margin-bottom">@Html.DisplayFor(model => model.Position.JobTitleFre)</h4>
    <hr />

    <table class="table table-bordered cell-padding">
        <tbody>
            <tr>
                <th colspan="2" class="table-header-row">CLASSIFICATION & LEVEL / CLASSIFICATION ET NIVEAU</th>
            </tr>
            <tr>
                <td colspan="2">
                    @Model.Position.JobGroupTitleEng Level (@Model.Position.LevelCode) / @Model.Position.JobGroupTitleFre Niveau (@Model.Position.LevelCode)
                </td>
            </tr>

            <tr>
                <th class="table-header-row" colspan="2">DESCRIPTION / DESCRIPTIF</th>
            </tr>
            @if (string.IsNullOrWhiteSpace(Model.Position.JobDescriptionEng) && string.IsNullOrWhiteSpace(Model.Position.JobDescriptionFre))
            {
                <tr>
                    <td colspan="2" class="bold no-border">No description provided</td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="2" class="no-border">
                        @if (string.IsNullOrWhiteSpace(Model.Position.JobDescriptionEng))
                        {
                            <b>No description provided</b>
                        }
                        else
                        {
                            <span>@Model.Position.JobDescriptionEng</span>
                        }
                        <span> / <br /></span>
                        @if (string.IsNullOrWhiteSpace(Model.Position.JobDescriptionFre))
                        {
                            <b>Aucun descriptif fourni</b>
                        }
                        else
                        {
                            <span>@Model.Position.JobDescriptionFre</span>
                        }
                    </td>
                </tr>
            }
          
           <tr>
               <th class="table-header-row" colspan="2">AREA / DOMAINE</th>
           </tr>
            <tr>
                <td colspan="2">
                    @if (Model.JobHLCategory == "2")
                    {
                        <span>Shore side / À terre</span>
                    }
                    else
                    {
                        <span>Seagoing / En mer</span>
                    }
                </td>
            </tr>

            <tr>
                <th class="table-header-row" colspan="2">REGIONS / RÉGIONS (@Model.JobLocationRegions.Count())</th>
            </tr>
            @if (Model.JobLocationRegions.Any())
            {
                @foreach (var c in Model.JobLocationRegions)
                {
                    <tr>
                        <td colspan="2">@c.NameEng / @c.NameFre</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2" class="red-text bold">
                        This position is is not offered in any region
                    </td>
                </tr>
            }

            @{
                var certificates = Model.PositionCertificates.Where(e => e.Active == 1).OrderBy(x => x.NameEng.ToLower()).ToList();
            }
            @if (certificates.Any())
            {
                <tr>
                    <th colspan="2" class="table-header-row">
                        <span class="expand-elements-in-next-rows closed" data-toggle="tooltip" title="Toggle expandable elements" id="certificatesRow">
                            CERTIFICATIONS / ATTESTATIONS (@certificates.Count())
                        </span>
                    </th>
                </tr>

                @foreach (var certificate in certificates)
                {
                    var key = "cert" + certificate.Id.ToString();
                    var divKey = "certDiv" + certificate.Id.ToString();

                    <tr>
                        <td colspan="2">
                            <div class="accordion" id="@divKey">
                                <button class="btn btn-link collapsed text-wrap text-left no-padding" type="button" data-toggle="collapse" data-target="#@key" aria-expanded="false" aria-controls="collapseOne" id="certificateScroll-@certificate.Id">
                                    @certificate.NameEng <b>/</b> @certificate.NameFre
                                </button>
                                <div id="@key" class="collapse" aria-labelledby="headingFour" data-parent="#@divKey">
                                    <div class="card-body">

                                        @{
                                            bool emptyCertificateDesc = string.IsNullOrWhiteSpace(certificate.CertificateDescEng) || string.IsNullOrWhiteSpace(certificate.CertificateDescFre);
                                        }

                                        @if (!emptyCertificateDesc)
                                        {
                                            <button type="button" class="btn btn-link collapsed no-padding small-margin-bottom display-block" data-toggle="collapse" data-target="#CertificateDescription-@certificate.Id">
                                                Certificate Descritpion
                                            </button>

                                            <div id="CertificateDescription-@certificate.Id" class="collapse">
                                                <div class="card-body no-padding-top xs-margin-bottom">
                                                    @{
                                                        string[] languages = { "English", "French" };
                                                        string[] descriptions = { certificate.CertificateDescEng, certificate.CertificateDescFre };

                                                        for (int i = 0; i < descriptions.Length; i++)
                                                        {
                                                            <p class="bold @(i > 0 ? "small-margin-top" : "")">
                                                                @languages[i]
                                                            </p>

                                                            <div>
                                                            @{
                                                                var descPortions = descriptions[i].Split("\r\n");
                                                                bool oneLinkAdded = false;
                                                                foreach (var desc in descPortions)
                                                                {
                                                                    bool containsALink = false;
                                                                    if (desc.Contains("http"))
                                                                    {
                                                                        containsALink = true;
                                                                    }
                                                                    if (!containsALink)
                                                                    {
                                                                        <span>@desc</span>
                                                                        <br />
                                                                    }
                                                                    else
                                                                    {
                                                                        var formattedLink = Formatter.FormatCertificateDescriptionLink(desc);
                                                                        var href = formattedLink[0];
                                                                        var displayStr = formattedLink[1];
                                                                            
                                                                        if (oneLinkAdded)
                                                                        {
                                                                            <span class="inline-block margin-left-link-spacing">| </span>
                                                                        }

                                                                        <a href="@href" target="_blank">
                                                                            @displayStr
                                                                            <img src="~/images/icons/external_link_icon.png" 
                                                                            class="external-link" alt="Open link in new tab" />
                                                                        </a>

                                                                        if (!oneLinkAdded)
                                                                        {
                                                                            oneLinkAdded = true;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        }

                                        @if (string.IsNullOrWhiteSpace(certificate.DescEng) && string.IsNullOrWhiteSpace(certificate.DescFre))
                                        {
                                            <p class="no-margins">
                                                <b>No description selected</b>
                                            </p>
                                            <div class="expanded-item-navigation">
                                                <a href="/Certificates/Edit?id=@certificate.Id" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-in-print">
                                                    Edit Certificate <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" />
                                                </a>

                                                <a href="/Certificates/Details?id=@certificate.Id" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-when-not-in-print print-link underline display-inline">
                                                    Certificate Details
                                                </a>
                                            </div>
                                        }
                                        else
                                        {
                                            <p>
                                                <b>Selected English Description</b><br />
                                                <span class="small-padding-top display-block">@(string.IsNullOrWhiteSpace(certificate.DescEng) ? "No description specified in English" : certificate.DescEng)</span>
                                            </p>
                                            <p>
                                                <b>Selected French Description</b><br />
                                                <span class="small-padding-top display-block">@(string.IsNullOrWhiteSpace(certificate.DescFre) ? "Aucune description specifée en français" : certificate.DescFre)</span>
                                            </p>
                                            <div class="expanded-item-navigation">
                                                <a href="/Certificates/Edit?id=@certificate.Id" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-in-print">
                                                    Edit Certificate <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" />
                                                </a> <span class="small-padding-left hide-in-print">|</span>
                                                <a href="/Certificates/Descriptions/Edit?id=@certificate.CertificateDescId" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-in-print">
                                                    Edit Selected Certificate Description <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" />
                                                </a>

                                                <a href="/Certificates/Details?id=@certificate.Id" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-when-not-in-print print-link underline display-inline">Certificate Details</a>&nbsp;<span class="hide-when-not-in-print display-inline no-underline">|</span> 
                                                <a href="/Certificates/Descriptions/Details?id=@certificate.CertificateDescId" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-when-not-in-print print-link underline display-inline">
                                                    Selected Certificate Description Details
                                                </a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <th colspan="2" class="table-header-row"><span>CERTIFICATIONS / ATTESTATIONS</span></th>
                </tr>
                <tr>
                    <td colspan="2" class="bold">
                        This position does not have any certifications associated to it
                    </td>
                </tr>
            }

            @{
                var levels = await Model.GetCompetencyLevelDescriptions();
                int executiveId = Model.CompetencyTypeNames.Where(x => x.NameEng.ToLower().Contains("executive")).Select(x => x.Id).FirstOrDefault();
            }

            @if (Model.PositionCompetencyRatings.Any())
            {
                int loopCounter = 0;
                @foreach (var competencytype in Model.PositionCompetencyRatings)
                {
                    var competenciesOfType = competencytype.Where(e => e.Active != 0).OrderBy(x => x.CompetencyNameEng.ToLower()).ToList();
                    if (competenciesOfType.Any())
                    {
                        <tr>
                            <th class="col-7 table-header-row"><span class="expand-elements-in-next-rows closed" data-toggle="tooltip" title="Toggle expandable elements">@competencytype.FirstOrDefault()?.TypeNameEng.ToUpper() / @competencytype.FirstOrDefault()?.TypeNameFre.ToUpper() (@competenciesOfType.Count())</span></th>
                            <th class="text-center col-3 table-header-row"><span class="expand-elements-in-next-rows closed second-column" data-toggle="tooltip" title="Toggle expandable elements">LEVEL / NIVEAU</span></th>
                        </tr>
                        foreach (var c in competenciesOfType)
                        {
                            var key1 = "a" + c.CompetencyId.ToString();
                            var key2 = "b" + c.CompetencyId.ToString();
                            var divKey = "compDiv" + c.CompetencyId.ToString();
                            var rateDivKey = "compRateDiv" + c.CompetencyId.ToString();
                            <tr>
                                <td class="col-7 no-padding">
                                    <div class="accordion" id="@divKey">
                                        <button class="btn btn-link collapsed text-wrap text-left no-padding" type="button" data-toggle="collapse" data-target="#@key1" aria-expanded="false" aria-controls="collapseOne" id="competencyScroll-@c.CompetencyId">
                                            @c.CompetencyNameEng <b>/</b> @c.CompetencyNameFre
                                        </button>
                                        <div id="@key1" class="collapse" aria-labelledby="headingFour" data-parent="#@divKey">
                                            <div class="card-body">
                                                <p>
                                                    <b>English Description</b><br />
                                                    <span class="small-padding-top display-block">@c.CompetencyDescEng</span>
                                                </p>
                                                <p>
                                                    <b>French Description</b><br />
                                                    <span class="small-padding-top display-block">@c.CompetencyDescFre</span>
                                                </p>
                                                <div class="expanded-item-navigation">
                                                    <a href="/Competencies/Edit?id=@c.CompetencyId" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-in-print">
                                                        Edit Competency <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" />
                                                    </a>
                                                    <a href="/Competencies/Details?id=@c.CompetencyId" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-when-not-in-print print-link underline display-inline">
                                                        Details
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center col-3">
                                    <div class="accordion" id="@rateDivKey">
                                        <button class="btn btn-link collapsed text-wrap text-left no-padding" type="button" data-toggle="collapse" data-target="#@key2" aria-expanded="false" aria-controls="collapselevelOne">
                                            @c.RatingValue
                                        </button>
                                        <div id="@key2" class="collapse" aria-labelledby="headingFour" data-parent="#@rateDivKey">
                                            <div class="card-body text-left">
                                                <p>
                                                    <b>English Description</b><br />
                                                    @if (c.TypeId == executiveId)
                                                    {
                                                        var level = levels.ElementAt(c.CompetencyRatingLevelId + (c.CompetencyRatingLevelId <= 5 ? 4 : -1));
                                                        <span class="small-padding-top display-block">@level.NameEng</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="small-padding-top display-block">@c.RatingNameEng @c.RatingDescEng</span>
                                                    }
                                                    <br />
                                                    @c.CompetencyLevelReqDescEng
                                                </p>
                                                <p>
                                                    <b>French Description</b><br />
                                                    @if (c.TypeId == executiveId)
                                                    {
                                                        var level = levels.ElementAt(c.CompetencyRatingLevelId + (c.CompetencyRatingLevelId <= 5 ? 4 : -1));
                                                        <span class="small-padding-top display-block">@level.NameFre</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="small-padding-top display-block">@c.RatingNameFre @c.RatingDescFre</span>
                                                    }
                                                    <br />
                                                    @c.CompetencyLevelReqDescFre
                                                </p>
                                                <div class="expanded-item-navigation">
                                                    <a href="/Competencies/Edit?id=@c.CompetencyId" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-in-print">
                                                        Edit Competency <img src="~/images/icons/external_link_icon.png" class="external-link" alt="Open link in new tab" />
                                                    </a>
                                                    <a href="/Competencies/Details?id=@c.CompetencyId" target="@(expandableItemsOpenNewWindows ? "_blank" : "_self")" class="hide-when-not-in-print print-link underline display-inline">
                                                        Details
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        var compType = Model.CompetencyTypeNames.ElementAt(loopCounter);
                        <tr>
                            <th class="col-7 table-header-row"><span class="closed">@compType.NameEng.ToUpper() / @compType.NameFre.ToUpper()</span></th>
                            <th class="text-center col-3 table-header-row"><span class="closed second-column">LEVEL / NIVEAU</span></th>
                        </tr>
                        <tr>
                            <td class="col-7"><span class="bold">This position requires no competencies of this type</span></td>
                            <td class="col-3 text-center bold">-</td>
                        </tr>
                    }
                    loopCounter++;
                }
            }
        </tbody>
    </table>
</div>

<div class="form-group space-btns small-margin-top hide-in-print">
    <a asp-page="./Edit" asp-route-id="@Model.Position.JobTitleId" class="btn btn-primary">Edit</a>
    <a class="btn btn-info" href="/Positions/Create?id=@Model.Position.JobTitleId"
    data-toggle="tooltip" title="Create a new position with the same details as current selection">Save a Copy</a>
</div>

<div class="hide-in-print">
    <a asp-page="./Index">Back to List</a> |
    <a href="/Similar/Locate?id=@Model.Position.JobTitleId" class="load-link">Locate in Similar Positions</a> |
    <a asp-page="./Delete" asp-route-id="@Model.Position.JobTitleId">Delete</a>
</div>
