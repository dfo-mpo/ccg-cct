@page
@model Admin.Pages.Positions.CreateModel
@using Admin.Pages.Positions

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>POSITION / POSTE</h4>
<hr />

<div class="space-tables-vertically">
    <div class="row">
        <div class="col-md-12">
            <form method="post" class="trimFormWhenSubmitting">
                
                @{
                    var editModel = new EditModel(Model.GetContext(), Model.GetJobCompetencyService(), Model.GetJobCertificateService(), Model.GetJobPositionService());
                    editModel.JobPosition = Model.JobPosition;
                    editModel.AddedCertificates = Model.AddedCertificates;
                    editModel.JobCompetenciesKnowledge = Model.JobCompetenciesKnowledge;
                    editModel.JobCompetenciesTechnical = Model.JobCompetenciesTechnical;
                    editModel.JobCompetenciesBehavioural = Model.JobCompetenciesBehavioural;
                    editModel.JobCompetenciesExecutive = Model.JobCompetenciesExecutive;
                    editModel.PositionCompetencyRatings = Model.PositionCompetencyRatings;
                    editModel.AddedKnowledgeCompetencies = Model.AddedKnowledgeCompetencies;
                    editModel.AddedTechnicalCompetencies = Model.AddedTechnicalCompetencies;
                    editModel.AddedBehaviouralCompetencies = Model.AddedBehaviouralCompetencies;
                    editModel.AddedExecutiveCompetencies = Model.AddedExecutiveCompetencies;
                    editModel.JobCertificateDescriptions = Model.JobCertificateDescriptions;
                    editModel.JobGroupPositions = Model.JobGroupPositions;
                    editModel.Id = Model.Id;
                    editModel.JobGroupId = Model.JobGroupId;
                    editModel.AddedCertificateIds = Model.AddedCertificateIds;
                    editModel.AddedKnowledgeCompetencyIds = Model.AddedKnowledgeCompetencyIds;
                    editModel.AddedTechnicalCompetencyIds = Model.AddedTechnicalCompetencyIds;
                    editModel.AddedBehaviouralCompetencyIds = Model.AddedBehaviouralCompetencyIds;
                    editModel.AddedExecutiveCompetencyIds = Model.AddedExecutiveCompetencyIds;
                    editModel.RegionIds = Model.RegionIds;
                    editModel.JobGroups = Model.JobGroups;
                    editModel.CurrentSelectedJobGroup = Model.CurrentSelectedJobGroup;
                    editModel.JobCertificates = Model.JobCertificates;
                    editModel.JobHLCategory = Model.JobHLCategory;
                    editModel.SelectedRegionIds = Model.SelectedRegionIds;
                    editModel.SubJobGroupId = Model.SubJobGroupId;
                    editModel.LevelCode = Model.LevelCode;
                    editModel.LevelValue = Model.LevelValue;

                    var routedata = editModel.GetRouteData(editModel);
                }

                <partial name="_Position" model="@editModel" />

                <div class="form-group space-btns">
                    <button class="btn btn-primary" asp-page-handler="create" asp-all-route-data="routedata">Create</button>
                    <a class="btn btn-secondary" href="/Positions/Index">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}