@page
@inject IViewLocalizer Localizer;
@model Web.Pages.CCGMember.Similar.SimilarListModel
@{
    var isEnglish = System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName == "en";
    var routedata = new Dictionary<string, string>
{
        {"positionid",Model.PositionId.ToString()},
        {"id", Model.Id },
        { "hlid", Model.HLId.ToString() },
        {"level", Model.Level },
        { "subgroupcode", Model.SubGroupCode },
        { "levelcode", Model.LevelCode },
       // {"pagesubmit", "true" },
        {"samelevels" , Model.SameLevels},
        {"higherlevels", Model.HigherLevels },
        {"certificates", Model.Certificates },
        {"sameorhigherlevels", Model.SameOrHigherLevels },
        {"addedcompetencies",Model.AddedCompetencies},
        {"requiredcompetencies", Model.RequiredCompetencies },
        {"percentmatch", Model.PercentMatch },
        {"previouspage", Model.PreviousPage },
        {"previouspagesimilar", Model.PreviousPageSimilar },
        {"previouspagedetails", Model.PreviousPageDetails }
    };
    var routedataprevious = new Dictionary<string, string>
{
        {"positionid",Model.PositionId.ToString()},
        {"id", Model.Id },
        { "hlid", Model.HLId.ToString() },
        {"level", Model.Level },
        { "subgroupcode", Model.SubGroupCode },
        { "levelcode", Model.LevelCode },
        {"pagesubmit", "true" },
        {"samelevels" , Model.SameLevels},
        {"higherlevels", Model.HigherLevels },
        {"certificates", Model.Certificates },
        {"sameorhigherlevels", Model.SameOrHigherLevels },
        {"addedcompetencies",Model.AddedCompetencies},
        {"requiredcompetencies", Model.RequiredCompetencies },
        {"percentmatch", Model.PercentMatch },
        {"previouspage", Model.PreviousPage },
        {"previouspagesimilar", Model.PreviousPageSimilar },
        {"previouspagedetails", Model.PreviousPageDetails }
    };

    var url = string.Empty;
    var countmessage100 = Model.HundredPercentPositions.Length != 1 ? "POSITIONS" : "POSITION";
    var countmessage90 = Model.NinetyPercentPositions.Length != 1 ? "POSITIONS" : "POSITION";
    var countmessage80 = Model.EightyPercentPositions.Length != 1 ? "POSITIONS" : "POSITION";
    var countmessage70 = Model.SeventyPercentPositions.Length != 1 ? "POSITIONS" : "POSITION";
}
@if (Model.PageSubmit == "Error")
{
    <section>
        <div class="mrgn-tp-md">
            <nav role="navigation">
                <h2 class="wb-inv">Document navigation</h2>
                <ul class="pager">
                    <li class="previous"><a class="btn btn-default mrgn-lft-md" rel="prev" asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedataprevious">@Localizer["Previous"]</a></li>
                </ul>
            </nav>
        </div>
        <div class="mrgn-tp-lg">
            <h4>@Localizer["NoPositions"]</h4>
        </div>
    </section>
}
else{
<section>
    <nav role="navigation" id="wb-bc" property="breadcrumb">
        <h2>
            @Localizer["You are here:"]
        </h2>
        <div class="row">
            <ol class="breadcrumb">
                <li><a asp-page="../../Index">@Localizer["Home"]</a></li>
                @if (Model.PreviousPage.Contains("Student"))
                {
                    <li><a asp-page="../../Student/Index">@Localizer["Student"]</a></li>
                    if (Model.PreviousPage.Contains("HighSchool"))
                    {
                        <li><a asp-page="../../Student/HighSchool/Index">@Localizer["HighSchool"]</a></li>
                        if (Model.PreviousPage.Contains("Shoreside"))
                        {
                            url = "../../Student/HighSchool/Shoreside/";
                            <li><a asp-page="../../Student/HighSchool/Shoreside/Index">@Localizer["Shoreside"]</a></li>
                        }
                        else
                        {
                            url = "../../Student/HighSchool/Seagoing/";
                            <li><a asp-page="../../Student/HighSchool/Seagoing/Index">@Localizer["Seagoing"]</a></li>
                        }
                    }
                    else if (Model.PreviousPage.Contains("College"))
                    {
                        <li><a asp-page="../../Student/College/Index">@Localizer["TechCollege"]</a></li>
                        if (Model.PreviousPage.Contains("Shoreside"))
                        {
                            url = "../../Student/College/Shoreside/";
                            <li><a asp-page="../../Student/College/Shoreside/Index">@Localizer["Shoreside"]</a></li>
                        }
                        else
                        {
                            <li><a asp-page="../../Student/College/Seagoing/Index">@Localizer["Seagoing"]</a></li>
                            if (Model.PreviousPage.Contains("Officer"))
                            {
                                url = "../../Student/College/Seagoing/Officer/";
                                <li><a asp-page="../../Student/College/Seagoing/Officer/Index">@Localizer["Officer"]</a></li>
                            }
                            else
                            {
                                url = "../../Student/College/Seagoing/Crew/";
                                <li><a asp-page="../../Student/College/Seagoing/Crew/Index">@Localizer["Crew"]</a></li>
                            }
                        }
                    }
                    else if (Model.PreviousPage.Contains("University"))
                    {
                        <li><a asp-page="../../Student/University/Index">@Localizer["University"]</a></li>
                        if (Model.PreviousPage.Contains("Shoreside"))
                        {
                            url = "../../Student/University/Shoreside/";

                            <li><a asp-page="../../Student/University/Shoreside/Index">@Localizer["Shoreside"]</a></li>
                        }
                        else
                        {
                            <li><a asp-page="../../Student/University/Seagoing/Index">@Localizer["Seagoing"]</a></li>
                            if (Model.PreviousPage.Contains("Officer"))
                            {
                                url = "../../Student/University/Seagoing/Officer/";
                                <li><a asp-page="../../Student/University/Seagoing/Officer/Index">@Localizer["Officer"]</a></li>
                            }
                            else
                            {
                                url = "../../Student/University/Seagoing/Crew/";
                                <li><a asp-page="../../Student/University/Seagoing/Crew/Index">@Localizer["Crew"]</a></li>
                            }
                        }
                    }
                    @if (Model.PreviousPage.Contains("Administrative"))
                    {
                        url += "Administrative";
                        <li><a asp-page="@url">@Localizer["Administrative"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Deck"))
                    {
                        url += "Deck";
                        <li><a asp-page="@url">@Localizer["Deck"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("SeagoingDeck"))
                    {
                        url += "Deck";
                        <li><a asp-page="@url">@Localizer["Deck"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Engineering"))
                    {
                        url += "Engineering";
                        <li><a asp-page="@url">@Localizer["Engineering"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Logistics"))
                    {
                        url += "Logistics";
                        <li><a asp-page="@url">@Localizer["Logistics"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Cook"))
                    {
                        url += "Cook";
                        <li><a asp-page="@url">@Localizer["Cook"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Electrical"))
                    {
                        url += "Electrical";
                        <li><a asp-page="@url">@Localizer["Electrical"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Electronics"))
                    {
                        url += "Electronics";
                        <li><a asp-page="@url">@Localizer["Electronics"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("GeographicalInformation"))
                    {
                        url += "GeographicalInformation";
                        <li><a asp-page="@url">@Localizer["geo"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("ComputerScience"))
                    {
                        url += "ComputerScience";
                        <li><a asp-page="@url">@Localizer["Computer Sciences"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Computer"))
                    {
                        url += "Computer";
                        <li><a asp-page="@url">@Localizer["Computer Systems"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Trades"))
                    {
                        url += "Trades";
                        <li><a asp-page="@url">@Localizer["Trades"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("GeneralArts"))
                    {
                        url += "GeneralArts";
                        <li><a asp-page="@url">@Localizer["General Arts"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("SocialScience"))
                    {
                        url += "SocialScience";
                        <li><a asp-page="@url">@Localizer["Social Sciences"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Sciences"))
                    {
                        url += "Sciences";
                        <li><a asp-page="@url">@Localizer["Sciences"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("Business"))
                    {
                        url += "Business";
                        <li><a asp-page="@url">@Localizer["Business"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("SeagoingLogistics"))
                    {
                        url += "SeagoingLogistics";
                        <li><a asp-page="@url">@Localizer["Logistics"]</a></li>
                    }
                    else if (Model.PreviousPage.Contains("SeagoingEngineer"))
                    {
                        url += "SeagoingEngineer";
                        <li><a asp-page="@url">@Localizer["Engineering"]</a></li>
                    }
                    <li><a asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedata">@Localizer["Current Position"]</a></li>
                    <li><a asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedataprevious">@Localizer["Similar Search"]</a></li>
                }
                else if (Model.PreviousPageDetails.Contains("Shoreside"))
                {
                    <li><a href="../../Candidate/Index">@Localizer["Candidate"]</a></li>
                    <li><a href="../../Candidate/Shoreside/AllCandidateShoreside">@Localizer["Shoreside"]</a></li>
                    <li><a asp-page="../../Candidate/Shoreside/SimilarList" asp-route-id="@Model.CurrentPosition.JobGroupId">@Localizer["Position List"]</a></li>
                    <li><a asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedata">@Localizer["Current Position"]</a></li>
                    <li><a asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedataprevious">@Localizer["Similar Search"]</a></li>
                }
                else if (Model.PreviousPageDetails.Contains("Seagoing"))
                {
                    <li><a href="../../Candidate/Index">@Localizer["Candidate"]</a></li>
                    <li><a href="../../Candidate/Seagoing/Index">@Localizer["Seagoing"]</a></li>
                    if (Model.PreviousPage.Contains("Officer"))
                    {
                        <li><a href="../../Candidate/Seagoing/Officer/Index">@Localizer["Officer"]</a></li>
                        if (Model.PreviousPage.Contains("Navigation"))
                        {
                            <li><a href="../../Candidate/Seagoing/Officer/Navigation/PositionList">@Localizer["Navigation"]</a></li>
                        }
                        else if (Model.PreviousPage.Contains("Engineering"))
                        {
                            <li><a href="../../Candidate/Seagoing/Officer/Engineering/PositionList">@Localizer["Engineering"]</a></li>
                        }
                    }
                    else if (Model.PreviousPage.Contains("Crew"))
                    {
                        <li><a href="../../Candidate/Seagoing/Crew/Index">@Localizer["Crew"]</a></li>
                        if (Model.PreviousPage.Contains("Deck"))
                        {
                            <li><a href="../../Candidate/Seagoing/Crew/Deck/PositionList">@Localizer["Deck"]</a></li>
                        }
                        if (Model.PreviousPage.Contains("Engineering"))
                        {
                            <li><a href="../../Candidate/Seagoing/Crew/Engineering/PositionList">@Localizer["Engineering"]</a></li>
                        }
                        if (Model.PreviousPage.Contains("Logistics"))
                        {
                            <li><a href="../../Candidate/Seagoing/Crew/Logistics/PositionList">@Localizer["Logistics"]</a></li>
                        }
                    }
                    <li><a asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedata">@Localizer["Current Position"]</a></li>
                    <li><a asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedataprevious">@Localizer["Similar Search"]</a></li>
                }
                else
                {
                    <li><a asp-page="../AllPositions">@Localizer["Categories"]</a></li>
                    <li><a asp-page="../CurrentPosition" asp-all-route-data="routedata">@Localizer["Select"]</a></li>
                    <li><a asp-page="../Details" asp-all-route-data="routedata">@Localizer["Current Position"]</a></li>
                    <li><a asp-page="../SearchType" asp-all-route-data="routedata">@Localizer["Search Type"]</a></li>
                }

                <li><a class="breadcrumb-item active" aria-current="page">@Localizer["Similar"]</a></li>
            </ol>
        </div>
    </nav>
    <a title="@Localizer["Save PDF"]" target="_blank" href="@Url.Action("SimilarList","ToPdf", new { id = Model.RouteParameter, SimilarJobIds100 = Model.SimilarJobIds100?.SimilarPositionIds, SimilarJobIds90 = Model.SimilarJobIds90?.SimilarPositionIds, SimilarJobIds80 = Model.SimilarJobIds80?.SimilarPositionIds, SimilarJobIds70 = Model.SimilarJobIds70?.SimilarPositionIds, positionid = Model.PositionId, language = System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName})"> <span class="glyphicon glyphicon-save pull-right" alt="@Localizer["Save PDF"]"></span></a>
    <nav role="navigation">
        <h2 class="wb-inv">Document navigation</h2>
        <ul class="pager">
            <li class="previous"><a class="btn btn-default mrgn-lft-md" rel="prev" asp-page="@Model.PreviousPageDetails" asp-all-route-data="routedataprevious">@Localizer["Previous"]</a></li>
        </ul>
    </nav>

    <div class="mrgn-tp-lg">
        <h4>@Localizer["Current Position"]: @Model.Position.JobGroupLevelCode - @(isEnglish ? Model.Position.JobTitleEng : Model.Position.JobTitleFre)</h4>
        @if (Model.SeventyPercentPositions.Any(e => e.Active != 0))
        {
            <h3 class="text-center">@Localizer["SIMILAR POSITIONS"] (70%)</h3>
            <h5>@Model.SeventyPercentPositions.Length @Localizer[countmessage70]</h5>
            <table class="table table-hover table-responsive table-bordered">
                <thead>
                    <tr>
                        <th class="bg-primary" width="12%">@Localizer["LEVEL"]</th>
                        <th class="bg-primary" width="75%">@Localizer["POSITION"]</th>
                        <th class="bg-primary" width="13%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var position in Model.SeventyPercentPositions.Where(e => e.Active != 0))
                    {
                        var routedatanext = new Dictionary<string, string>
                                             {
        {"objectiveid",  position.JobTitleId.ToString()},
        {"positionid",  Model.PositionId.ToString()},
        {"id", Model.Id },
        {"hlid", Model.HLId.ToString() },
        {"level", Model.Level },
        { "subgroupcode", Model.SubGroupCode },
        {"previouspagesimilardetails","SimilarList" },
        { "levelcode", Model.LevelCode },
        {"samelevels" , Model.SameLevels},
        {"higherlevels", Model.HigherLevels },
        {"addedcompetencies",Model.AddedCompetencies},
        {"certificates", Model.Certificates },
        {"sameorhigherlevels", Model.SameOrHigherLevels },
        {"requiredcompetencies", Model.RequiredCompetencies },
        {"percentmatch", Model.PercentMatch },
        {"previouspagesimilar", Model.PreviousPageSimilar },
        {"previouspagedetails", Model.PreviousPageDetails },
        {"previouspage", Model.PreviousPage }
        };

        <tr>
            <td>@position.LevelCode</td>
            <td>@(isEnglish? position.JobTitleEng: position.JobTitleFre)</td>
            <td><a asp-page="SimilarDetails" asp-all-route-data="@routedatanext" role="button">@Localizer["More Details"]</a></td>
        </tr>
    }
                </tbody>
            </table>
        }
        @if (Model.EightyPercentPositions.Any(e => e.Active != 0))
        {
            <table class="table table-hover table-responsive table-bordered">
                <h3 class="text-center">@Localizer["SIMILAR POSITIONS"] (80%)</h3>
                <h5>@Model.EightyPercentPositions.Length @Localizer[countmessage80]</h5>
                <thead>
                    <tr>
                        <th class="bg-primary" width="12%">@Localizer["LEVEL"]</th>
                        <th class="bg-primary" width="75%">@Localizer["POSITION"]</th>
                        <th class="bg-primary" width="13%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var position in Model.EightyPercentPositions.Where(e => e.Active != 0))
                    {
                        var routedatanext = new Dictionary<string, string>
                                     {
        {"objectiveid",  position.JobTitleId.ToString()},
        {"positionid",  Model.PositionId.ToString()},
        {"id", Model.Id },
        {"hlid", Model.HLId.ToString() },
        {"level", Model.Level },
        { "subgroupcode", Model.SubGroupCode },
        {"previouspagesimilardetails","SimilarList" },
        { "levelcode", Model.LevelCode },
        {"samelevels" , Model.SameLevels},
        {"higherlevels", Model.HigherLevels },
        {"addedcompetencies",Model.AddedCompetencies},
        {"certificates", Model.Certificates },
        {"sameorhigherlevels", Model.SameOrHigherLevels },
        {"requiredcompetencies", Model.RequiredCompetencies },
        {"percentmatch", Model.PercentMatch },
        {"previouspagesimilar", Model.PreviousPageSimilar },
        {"previouspagedetails", Model.PreviousPageDetails },
        {"previouspage", Model.PreviousPage }
        };

        <tr>
            <td>@position.LevelCode</td>
            <td>@(isEnglish? position.JobTitleEng: position.JobTitleFre)</td>
            <td><a asp-page="SimilarDetails" asp-all-route-data="@routedatanext" role="button">@Localizer["More Details"]</a></td>
        </tr>
    }
                </tbody>
            </table>
        }
        @if (Model.NinetyPercentPositions.Any(e => e.Active != 0))
        {
            <table class="table table-hover table-responsive table-bordered">
                <h3 class="text-center">@Localizer["SIMILAR POSITIONS"] (90%)</h3>
                <h5>@Model.NinetyPercentPositions.Length @Localizer[countmessage90]</h5>
                <thead>
                    <tr>
                        <th class="bg-primary" width="12%">@Localizer["LEVEL"]</th>
                        <th class="bg-primary" width="75%">@Localizer["POSITION"]</th>
                        <th class="bg-primary" width="13%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var position in Model.NinetyPercentPositions.Where(e => e.Active != 0))
                    {
                        var routedatanext = new Dictionary<string, string>
                                     {
        {"objectiveid",  position.JobTitleId.ToString()},
        {"positionid",  Model.PositionId.ToString()},
        {"id", Model.Id },
        {"hlid", Model.HLId.ToString() },
        {"level", Model.Level },
        { "subgroupcode", Model.SubGroupCode },
        {"previouspagesimilardetails","SimilarList" },
        { "levelcode", Model.LevelCode },
        {"samelevels" , Model.SameLevels},
        {"higherlevels", Model.HigherLevels },
        {"addedcompetencies",Model.AddedCompetencies},
        {"certificates", Model.Certificates },
        {"sameorhigherlevels", Model.SameOrHigherLevels },
        {"requiredcompetencies", Model.RequiredCompetencies },
        {"percentmatch", Model.PercentMatch },
        {"previouspagesimilar", Model.PreviousPageSimilar },
        {"previouspagedetails", Model.PreviousPageDetails },
        {"previouspage", Model.PreviousPage }
        };

        <tr>
            <td>@position.LevelCode</td>
            <td>@(isEnglish? position.JobTitleEng: position.JobTitleFre)</td>
            <td><a asp-page="SimilarDetails" asp-all-route-data="@routedatanext" role="button">@Localizer["More Details"]</a></td>
        </tr>
    }
                </tbody>
            </table>
        }
        @if (Model.HundredPercentPositions.Any(e => e.Active != 0))
        {
            <h3 class="text-center">@Localizer["SIMILAR POSITIONS"] (100%)</h3>
            <h5>@Model.HundredPercentPositions.Length @Localizer[countmessage100]</h5>
            <table class="table table-hover table-responsive table-bordered">
                <thead>
                    <tr>
                        <th class="bg-primary" width="12%">@Localizer["LEVEL"]</th>
                        <th class="bg-primary" width="75%">@Localizer["POSITION"]</th>
                        <th class="bg-primary" width="13%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var position in Model.HundredPercentPositions.Where(e => e.Active != 0))
                    {
                        var routedatanext = new Dictionary<string, string>
                                             {
        {"objectiveid",  position.JobTitleId.ToString()},
        {"positionid",  Model.PositionId.ToString()},
        {"id", Model.Id },
        {"hlid", Model.HLId.ToString() },
        {"level", Model.Level },
        { "subgroupcode", Model.SubGroupCode },
        {"previouspagesimilardetails","SimilarList" },
        { "levelcode", Model.LevelCode },
        {"samelevels" , Model.SameLevels},
        {"higherlevels", Model.HigherLevels },
        {"addedcompetencies",Model.AddedCompetencies},
        {"certificates", Model.Certificates },
        {"sameorhigherlevels", Model.SameOrHigherLevels },
        {"requiredcompetencies", Model.RequiredCompetencies },
        {"percentmatch", Model.PercentMatch },
        {"previouspagesimilar", Model.PreviousPageSimilar },
        {"previouspagedetails", Model.PreviousPageDetails },
        {"previouspage", Model.PreviousPage }
        };

        <tr>
            <td>@position.LevelCode</td>
            <td>@(isEnglish? position.JobTitleEng: position.JobTitleFre)</td>
            <td><a asp-page="SimilarDetails" asp-all-route-data="@routedatanext" role="button">@Localizer["More Details"]</a></td>
        </tr>
    }
                </tbody>
            </table>
        }
    </div>
</section>
}