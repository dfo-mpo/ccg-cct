@page
@model Web.Pages.CCGMember.Compare.DeltaModel
@inject IViewLocalizer Localizer
@{
    var isEnglish = System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName == "en";
    var matchingcompetencies = false;
    var differingcompetencies = false;
    var routedatasimilarcurrent = new Dictionary<string, string>
{
        {"id",  Model.Id},
        {"previouspage", Model.PreviousPage },
        {"previouspagesimilar", "../SearchType" },
        {"level",  Model.Level },
        {"positionid",  Model.PositionId.ToString()},
        };
    var routedatasimilarobjective = new Dictionary<string, string>
{
        {"id", Model.IdObj},
        {"previouspage", Model.PreviousPage },
        {"previouspagesimilar", "../SearchType" },
        {"level",  Model.LevelObj },
        {"positionid",  Model.ObjectiveId.ToString()},
        };
}

<section role="contentinfo">
    <div class="col-md-12 mrgn-tp-md mrgn-bttm-md">
        <a title="@Localizer["Print PDF"]" target="_blank" href="@Url.Action("Delta","ToPdf", new { id = Model.CurrentPosition.JobTitleId, obj = Model.ObjectivePosition.JobTitleId, language = System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName})"><span class="glyphicon glyphicon-print pull-right mrgn-lft-md" alt="@Localizer["Print PDF"]"></span> </a>
        <a title="@Localizer["Save PDF"]" target="_blank" href="@Url.Action("Delta","ToPdf", new { id = Model.CurrentPosition.JobTitleId, obj = Model.ObjectivePosition.JobTitleId, language = System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName})"><span class="glyphicon glyphicon-save pull-right" alt="@Localizer["Save PDF"]"></span> </a>
    </div>
    <div class="row text-center mrgn-bttm-lg">
        <h2><b>@Localizer["h2Results"]</b></h2>
    </div>
    <table class="table table-bordered table-responsive" width="100%" border="0" cellspacing="0" cellpadding="0">
        <tbody>
            <tr>
                <td class="bg-success" width="50%"><b>@Localizer["Current Position"]:</b> @Model.CurrentPosition.JobGroupCode @Model.CurrentPosition.JobGroupLevelValue - @(isEnglish ? Model.CurrentPosition.JobTitleEng : Model.CurrentPosition.JobTitleFre)</td>
                <td class="bg-info" width="50%"><b>@Localizer["Selected Position"]:</b> @Model.ObjectivePosition.JobGroupCode @Model.ObjectivePosition.JobGroupLevelValue - @(isEnglish ? Model.ObjectivePosition.JobTitleEng : Model.ObjectivePosition.JobTitleFre)</td>
            </tr>
            @if (Model.PreviousPage==string.Empty)
            {<tr>
                <td class="bg-success" >
                    <div class="row mrgn-tp-md">
                        <a class="btn btn-primary pull-right mrgn-rght-md" type="button" asp-page="../Similar/SimilarSearch" asp-all-route-data="@routedatasimilarcurrent">@Localizer["Similar"]</a>
                    </div>
                </td>
                <td class="bg-info">
                    <div class="row mrgn-tp-md">
                        <a class="btn btn-primary pull-right mrgn-rght-md" type="button" asp-page="../Similar/SimilarSearch" asp-all-route-data="@routedatasimilarobjective">@Localizer["Similar"]</a>
                    </div>
                </td>
            </tr>
            }
        </tbody>
    </table>
    @if (Model.MatchingCertificates.Any())
    {
        <div class="row col-lg-12">
            <h3>@Localizer["MATCHING COMPETENCIES"]</h3>
        </div>
        matchingcompetencies = true;
        <div class="col-md-6">
            <table class="table table-responsive table-bordered">
                <thead>
                    <tr>
                        <th style="background-color:#f2f2f2">@Localizer["CERTIFICATIONS"]</th>
                    </tr>
                </thead>
                <tbody>



                    @foreach (var c in Model.MatchingCertificates)
                    {
                        <tr>
                            <td>
                                @(isEnglish ? c.NameEng : c.NameFre) @(isEnglish ? c.DescEng : c.DescFre)
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    }
    @foreach (var competencies in Model.MatchingCompetencies)
    {
        if (competencies.Any())
        {
            if (!matchingcompetencies)
            {
                <div class="row col-lg-12">
                    <h3>@Localizer["MATCHING COMPETENCIES"]</h3>
                </div>
                matchingcompetencies = true;
            }
            <div class="col-md-6">
                <table class="table table-responsive table-bordered">
                    <thead>
                        <tr>
                            <th style="background-color:#f2f2f2">@(isEnglish ? competencies.FirstOrDefault()?.TypeNameEng.ToUpper() : competencies.FirstOrDefault()?.TypeNameFre.ToUpper())</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var c in competencies)
                        {
                            <tr>
                                <td>@(isEnglish ? c.CompetencyNameEng : c.CompetencyNameFre)</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        }
    }

    @if (Model.DifferingCertificates.Any())
    {
        <div class="row col-lg-12">
            <h3>@Localizer["DIFFERING COMPETENCIES"]</h3>
        </div>
        differingcompetencies = true;
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th style="background-color:#f2f2f2" width="70%">@Localizer["CERTIFICATIONS"]</th>
                    <th class="text-center bg-success">@Localizer["Current Position"]</th>
                    <th class="text-center bg-info">@Localizer["Selected Position"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var d in Model.DifferingCertificates)
                {
                    <tr>
                        <td>
                            @(isEnglish ? d.NameEng : d.NameFre) @(isEnglish ? d.DescEng : d.DescFre)
                        </td>
                        <td class="text-center bg-success">&nbsp;</td>
                        <td class="text-center bg-info">&nbsp;</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @foreach (var competencies in Model.DifferingCompetencies)
    {
        @if (competencies.Any())
        {
            @if (!differingcompetencies)
            {
                <div class="row col-lg-12">
                    <h3>@Localizer["DIFFERING COMPETENCIES"]</h3>
                </div>
                differingcompetencies = true;
            }

            <table class="table table-hover table-bordered">
                <thead>
                    <tr>
                        <th style="background-color:#f2f2f2" width="70%">@(isEnglish ? competencies.FirstOrDefault()?.TypeNameEng.ToUpper() : competencies.FirstOrDefault()?.TypeNameFre.ToUpper())</th>
                        <th class="text-center bg-success">@Localizer["Current Position"]</th>
                        <th class="text-center bg-info">@Localizer["Selected Position"]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var d in competencies)
                    {
                        var key1 = "a" + d.CompetencyId.ToString();
                        var key2 = "b" + d.CompetencyId.ToString();
                        var currentrating = d.RatingValueCur;
                        var currentratingdesc = isEnglish ? d.RatingDescCurEng : d.RatingDescCurFre;
                        if (d.RatingValueCur == "N/A" && Model.AddedCompetencyId.Contains(d.CompetencyId))
                        {
                            currentrating = Localizer["Added"].Value;
                        }
                        <tr>
                            <td>
                                <a href="#@key1" aria-controls="centred-popup" class="wb-lbx" role="button">@(isEnglish ? d.CompetencyNameEng : d.CompetencyNameFre)</a>
                                <section id="@key1" class="mfp-hide modal-dialog modal-content overlay-def">
                                    <header class="modal-header">
                                        <h2 class="modal-title">@(isEnglish ? d.CompetencyNameEng : d.CompetencyNameFre)</h2>
                                    </header>
                                    <div class="modal-body ">
                                        <p>@(isEnglish ? d.CompetencyDescEng : d.CompetencyDescFre)</p>
                                        <button class="btn btn-primary popup-modal-dismiss" type="button">@Localizer["Close"]</button>
                                    </div>
                                </section>
                            </td>
                            <td class="text-center bg-success">
                                <a href="#@key2" aria-controls="centred-popup" class="wb-lbx"><abbr title="Level @d.RatingValueCur Summary">@currentrating</abbr></a>
                                <section id="@key2" class="mfp-hide modal-dialog modal-content overlay-def">
                                    <header class="modal-header">
                                        <h2 class="modal-title">@Localizer["Current Position Level"]: @d.RatingValueCur</h2>
                                    </header>
                                    <div class="modal-body ">
                                        <p>@(isEnglish ? d.RatingNameCurEng : d.RatingNameCurFre) @(isEnglish ? d.RatingDescCurEng : d.RatingDescCurFre)</p>
                                        <p>@(isEnglish ? d.CompetencyLevelReqDescCurEng : d.CompetencyLevelReqDescCurFre)</p>
                                    </div>
                                    <header class="modal-header">
                                        <h2 class="modal-title">@Localizer["Selected Position Level"]: @d.RatingValueObj</h2>
                                    </header>
                                    <div class="modal-body">
                                        <p>@(isEnglish ? d.RatingNameObjEng : d.RatingNameObjFre) @(isEnglish ? d.RatingDescObjEng : d.RatingDescObjFre)</p>
                                        <p>@(isEnglish ? d.CompetencyLevelReqDescObjEng : d.CompetencyLevelReqDescObjFre)</p>
                                    </div>
                                </section>
                            </td>
                            <td class="text-center bg-info">
                                <a href="#@key2" aria-controls="centred-popup" class="wb-lbx"><abbr title="Level @d.RatingValueObj Summary">@d.RatingValueObj</abbr></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        }
    }
</section>

<div class="row">
    <div class="col-lg-12 mrgn-bttm-md">
        <nav role="navigation" class="mrgn-bttm-lg">

            <h2 class="wb-inv">Document navigation</h2>

            <ul class="pager">
                @{
                    var routedata = new Dictionary<string, string>
                            {
                        {"positionid",  Model.PositionId.ToString()},
                        {"objectiveid",  Model.ObjectiveId.ToString() },
                        {"id",  Model.Id},
                        {"idobj",  Model.IdObj},
                        {"level",  Model.Level},
                        {"levelobj", Model.LevelObj},
                        {"pagesubmit", "true" },
                        {"samelevels" , Model.SameLevels},
                        {"higherlevels", Model.HigherLevels },
                        {"certificates", Model.Certificates },
                        {"sameorhigherlevels", Model.SameOrHigherLevels },
                        {"requiredcompetencies", Model.RequiredCompetencies },
                        {"addedcompetencies",Model.AddedCompetencies},
                        {"percentmatch", Model.PercentMatch },
                        {"previouspagesimilar", Model.PreviousPageSimilar },
                        {"previouspagecompare", Model.PreviousPageCompare },
                        {"previouspagedetails", Model.PreviousPageDetails },
                        {"previouspage", Model.PreviousPage}
                    };
                }
                <li class="previous"><a class="btn btn-default" type="button" rel="prev" asp-page="@Model.PreviousPageDelta" asp-all-route-data="routedata">@Localizer["Previous"]</a></li>
            </ul>
        </nav>
    </div>
</div>
