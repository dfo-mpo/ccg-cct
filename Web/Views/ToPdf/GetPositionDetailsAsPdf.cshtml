@inject Web.Data.JobPositionService _jobpositionService
@using Business.Dtos.JobCompetencies
@{
    Layout = "_ThemePdf";
}

@{
    var isEnglish = ViewData["Language"].ToString() == "en";
    var positionid = System.Int32.Parse(ViewData["Id"].ToString());
    var Position = await _jobpositionService.GetJobPositionById(positionid);
    var PositionCertificates = await _jobpositionService.GetJobCertificatesById(positionid);
    List<JobCompetencyRatingDto[]> PositionCompetencyRatings = new List<JobCompetencyRatingDto[]>();
    var CompetencyTypes = await _jobpositionService.GetAllJobCompetencyTypes();
    foreach (var competencytype in CompetencyTypes)
    {
        var competencies = await _jobpositionService.GetJobCompetencyRatingsByTypeId(positionid, competencytype.Id);
        if (!competencies.Equals(null))
        {
            PositionCompetencyRatings.Add(competencies);
        }
    }

    var certifications = isEnglish ? "CERTIFICATIONS" : "ATTESTATIONS";
    var h2Results = isEnglish ? "Current Position Details" : "Détails de la position actuelle";
    var level = isEnglish ? "Level" : "Niveau";
    var positiondetails = isEnglish ? "POSITION DETAILS" : "DÉTAILS DU POSTE";
    var nocertifications = isEnglish ? "No Certifications" : "Aucun certificat associées";
}
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<section role="contentinfo">
   
    <h3 class="text-center">@h2Results</h3>

    <table class="table table-hover table-bordered mrgn-tp-lg" width="100%" border="0" cellspacing="0" cellpadding="0">
        <caption><h4>@positiondetails: @Position.JobGroupCode-@Position.JobGroupLevelValue @(isEnglish ? Position.JobTitleEng : Position.JobTitleFre)</h4></caption>
        <tbody>
            <tr>
                <th style="background-color:#f2f2f2" colspan="2">@certifications</th>
            </tr>

            @if (PositionCertificates.Any(e => e.Active != 0))
            {
                @foreach (var c in PositionCertificates.Where(e => e.Active != 0))
                {
                        <tr>
                            <td colspan="2">@(isEnglish ? c.NameEng : c.NameFre)</td>
                        </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2">@nocertifications</td>
                </tr>
            }
            @if (PositionCompetencyRatings.Any())
            {
                @foreach (var competencytype in PositionCompetencyRatings)
                {
                    if (competencytype.Any(e => e.Active != 0))
                    {
                        <tr>
                            <th style="background-color:#f2f2f2" width="80%">@(isEnglish ? competencytype.FirstOrDefault()?.TypeNameEng.ToUpper() : competencytype.FirstOrDefault()?.TypeNameFre.ToUpper())</th>
                            <th style="background-color:#f2f2f2" class="text-center" width="20%">@level</th>
                        </tr>
                        @foreach (var c in competencytype.Where(e => e.Active != 0))
                        {
                                <tr>
                                    <td>
                                        @(isEnglish ? c.CompetencyNameEng : c.CompetencyNameFre)
                                    </td>
                                    <td class="text-center">

                                        @c.RatingValue

                                    </td>
                                </tr>
                            }
                        }
                    }
                }
            </tbody>
    </table>
</section>

