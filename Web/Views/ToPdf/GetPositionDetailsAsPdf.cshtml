@inject Web.Data.JobPositionService _jobpositionService
@using Business.Dtos.JobCompetencies
@using System.Resources;
@{
    Layout = "_ThemePdf";
}

@{
    ResourceManager pdfTranslations = Web.Resources.PDFviews.ResourceManager;
    var isEnglish = ViewData["Language"].ToString() == "en";
    var positionid = System.Int32.Parse(ViewData["Id"].ToString());
    var Position = await _jobpositionService.GetJobPositionById(positionid);
    var JobLocationRegions = await _jobpositionService.GetJobLocationRegionsById(positionid);
    var PositionCertificates = await _jobpositionService.GetJobCertificatesById(positionid);
    List<JobCompetencyRatingDto[]>
    PositionCompetencyRatings = new List<JobCompetencyRatingDto[]>
        ();
    var CompetencyTypes = await _jobpositionService.GetAllJobCompetencyTypes();
    foreach (var competencytype in CompetencyTypes)
    {
        var competencies = await _jobpositionService.GetJobCompetencyRatingsByTypeId(positionid, competencytype.Id);
        if (!competencies.Equals(null))
        {
            PositionCompetencyRatings.Add(competencies);
        }
    }

    var MELDEVUrl = isEnglish ? pdfTranslations.GetString("MELDEVUrl") : pdfTranslations.GetString("MELDEVUrlFr");
    var MCTSUrl = isEnglish ? pdfTranslations.GetString("MCTSUrl") : pdfTranslations.GetString("MCTSUrlFr");
    var behavCompDesc = isEnglish ? pdfTranslations.GetString("behavCompDesc") : pdfTranslations.GetString("behavCompDescFr");
    var knowCompDesc = isEnglish ? pdfTranslations.GetString("knowCompDesc") : pdfTranslations.GetString("knowCompDescFr");
    var techCompDesc = isEnglish ? pdfTranslations.GetString("techCompDesc") : pdfTranslations.GetString("techCompDescFr");
}
        <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

        <section role="contentinfo">

            <h3 class="text-center">@(isEnglish ? pdfTranslations.GetString("h2Results") : pdfTranslations.GetString("h2ResultsFr"))</h3>

            @if (Position.JobTitleEng.Contains("MELDEV") || Position.JobTitleEng.Contains("MCTS"))
            {
                <div class="col-md-offset-2 col-md-8" style="background-color: #f2f2f2; padding-top: 5px; padding-bottom:25px;">
                    <div class="text-left">
                        <h4>@(isEnglish ? pdfTranslations.GetString("PDAPText") : pdfTranslations.GetString("PDAPTextFr"))</h4>
                        @{var url = Position.JobTitleEng.Contains("MELDEV") ? @MELDEVUrl : @MCTSUrl; }
                        <a href="@url" target="_blank">@url</a>
                    </div>
                </div>
            }

            <table class="table table-hover table-bordered mrgn-tp-lg" width="100%" border="0" cellspacing="0" cellpadding="0">
                <caption><h4>@(isEnglish ? pdfTranslations.GetString("positionDetails") : pdfTranslations.GetString("positionDetailsFr")): @Position.JobGroupLevelCode @(isEnglish ? Position.JobTitleEng : Position.JobTitleFre)</h4></caption>
                <tbody>
                    @if (Position.JobDescriptionEng != "" && Position.JobDescriptionFre != "")
                    {
                        <tr>
                            <th style="background-color:#f2f2f2" colspan="2">@(isEnglish ? pdfTranslations.GetString("positionDescription") : pdfTranslations.GetString("positionDescriptionFr"))</th>
                        </tr>
                        <tr>
                            <td colspan="2">@(isEnglish ? Position.JobDescriptionEng : Position.JobDescriptionFre)</td>
                        </tr>
                    }
                    <tr>
                        <th style="background-color:#f2f2f2" colspan="2">@(isEnglish ? pdfTranslations.GetString("regions") : pdfTranslations.GetString("regionsFr"))</th>
                    </tr>
                    @if (JobLocationRegions.Any())
                    {
                        @foreach (var c in JobLocationRegions)
                        {
                            var key = "d" + c.JobLocationRegionId.ToString();
                            <tr>
                                <td colspan="2">@(isEnglish ? pdfTranslations.GetString(c.NameEng) : pdfTranslations.GetString(c.NameFre))</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2">@(isEnglish ? pdfTranslations.GetString("noRegions") : pdfTranslations.GetString("noRegionsFr"))</td>
                        </tr>
                    }
                    <tr>
                        <th style="background-color:#f2f2f2" colspan="2">@(isEnglish ? pdfTranslations.GetString("certifications") : pdfTranslations.GetString("certificationsFr"))</th>
                    </tr>
                    @if (PositionCertificates.Any(e => e.Active != 0))
                    {
                        @foreach (var c in PositionCertificates.Where(e => e.Active != 0))
                        {
                            <tr>
                                <td colspan="2">@(isEnglish ? c.NameEng : c.NameFre)</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2">@(isEnglish ? pdfTranslations.GetString("noCertifications") : pdfTranslations.GetString("noCertificationsFr"))</td>
                        </tr>
                    }
                    @if (PositionCompetencyRatings.Any())
                    {
                        @foreach (var competencytype in PositionCompetencyRatings)
                        {
                            if (competencytype.Any(e => e.Active != 0))
                            {
                                <tr>
                                    <th style="background-color:#f2f2f2" width="80%">
                                        @pdfTranslations.GetString(isEnglish ? competencytype.FirstOrDefault()?.TypeNameEng.ToUpper() : competencytype.FirstOrDefault()?.TypeNameFre.ToUpper())
                                        <small style="font-weight:normal;">
                                            @((competencytype.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("BEHAVIOURAL") ? @behavCompDesc : "")
                                            @((competencytype.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("KNOWLEDGE") ? @knowCompDesc : "")
                                            @((competencytype.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("TECHNICAL") ? @techCompDesc : "")
                                        </small>
                                    </th>
                                    <th style="background-color:#f2f2f2" class="text-center" width="20%">@(isEnglish ? pdfTranslations.GetString("level") : pdfTranslations.GetString("levelFr"))</th>
                                </tr>
                                @foreach (var c in competencytype.Where(e => e.Active != 0))
                                {
                                    <tr>
                                        <td>
                                            @(isEnglish ? c.CompetencyNameEng : c.CompetencyNameFre)
                                        </td>
                                        <td class="text-center">

                                            @c.RatingValue

                                        </td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
            </table>
        </section>

