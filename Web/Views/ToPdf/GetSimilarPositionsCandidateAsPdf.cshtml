@inject Web.Data.JobGroupService _jobgroupService
@inject Web.Data.JobPositionService _jobpositionService
@using System.Resources;
@{
    Layout = "_ThemePdf";
}
@{
    ResourceManager pdfTranslations = Web.Resources.PDFviews.ResourceManager;
    var isEnglish = ViewData["Language"].ToString() == "en";
    var id = int.Parse(ViewData["Id"].ToString());
    var hlid = int.Parse(ViewData["HLId"].ToString());
    var JobGroup = await _jobgroupService.GetJobGroupById(id);
    var Positions = await _jobpositionService.GetJobPositionByIdValues(ViewData["PositionsIds"].ToString());
}
<div class="mrgn-tp-lg">
    <h3 class="text-center">@(isEnglish ? JobGroup.NameEng : JobGroup.NameFre) (@JobGroup.Code)</h3>
    <h5>@Positions.Length @(isEnglish ? pdfTranslations.GetString("positions") : pdfTranslations.GetString("positionsFr"))</h5>
    <table class="table table-hover table-responsive table-bordered">
        <tbody>
            <tr>
                <td class="bg-primary" width="25%">@(isEnglish ? pdfTranslations.GetString("level") : pdfTranslations.GetString("levelFr"))</td>
                <td class="bg-primary" width="75%">@(isEnglish ? pdfTranslations.GetString("position") : pdfTranslations.GetString("positionFr"))</td>
            </tr>

            @foreach (var position in Positions.Where(e => e.Active != 0))
            {
                <tr>
                    <td>@position.LevelCode</td>
                    <td>@(isEnglish ? position.JobTitleEng : position.JobTitleFre)</td>

                </tr>
            }
        </tbody>
    </table>
</div>
