@inject Web.Data.CompareService _compareService
@using Business.Dtos.Shared
@using System.Resources;
@{
    Layout = "_ThemePdf";
}

@{
    ResourceManager pdfTranslations = Web.Resources.PDFviews.ResourceManager;
    var isEnglish = ViewData["Language"].ToString() == "en";
    var positionid = System.Int32.Parse(ViewData["Id"].ToString());
    var obj = System.Int32.Parse(ViewData["Obj"].ToString());
    var CurrentPosition = await _compareService.GetJobPositionById(positionid);
    var ObjectivePosition = await _compareService.GetJobPositionById(obj);
    var MatchingJobLocationRegions = await _compareService.GetMatchingJobLocationRegionsByPositionId(positionid, obj);
    var DifferingJobLocationRegions = await _compareService.GetDifferingJobLocationRegionsByPositionId(positionid, obj);
    List<SharedJobCompetencyRating[]> MatchingCompetencies = new List<SharedJobCompetencyRating[]>();
    List<SharedJobCompetencyRating[]> DifferingCompetencies = new List<SharedJobCompetencyRating[]>();
    var MatchingCertificates = await _compareService.GetMatchingCertificatesByPositionId(positionid, obj);
    var DifferingCertificates = await _compareService.GetDifferingCertificatesByPositionId(positionid, obj);
    var CompetencyTypes = await _compareService.GetAllJobCompetencyTypes();
    foreach (var competencytype in CompetencyTypes)
    {
        var anymatchingcompetencies = await _compareService.GetMatchingCompetenciesByTypeId(competencytype.Id, positionid, obj);
        if (!anymatchingcompetencies.Equals(null))
        {
            MatchingCompetencies.Add(anymatchingcompetencies);
        }
        var differingcomptencies = await _compareService.GetDifferingCompetenciesByTypeId(competencytype.Id, positionid, obj);
        if (!differingcomptencies.Equals(null))
        {
            DifferingCompetencies.Add(differingcomptencies);
        }
    }
    var matchingcompetencies = false;
    var differingcompetencies = false;
    var currentdescription = isEnglish ? CurrentPosition.JobDescriptionEng : CurrentPosition.JobDescriptionFre;
    var objectivedescription = isEnglish ? ObjectivePosition.JobDescriptionEng : ObjectivePosition.JobDescriptionFre;
    var behavCompDesc = isEnglish ? pdfTranslations.GetString("behavCompDesc") : pdfTranslations.GetString("behavCompDescFr");
    var knowCompDesc = isEnglish ? pdfTranslations.GetString("knowCompDesc") : pdfTranslations.GetString("knowCompDescFr");
    var techCompDesc = isEnglish ? pdfTranslations.GetString("techCompDesc") : pdfTranslations.GetString("techCompDescFr");
}
<section role="contentinfo">
    <div class="row text-center mrgn-bttm-lg">
        <h2><b>@(isEnglish ? pdfTranslations.GetString("compareHeading") : pdfTranslations.GetString("compareHeadingFr"))</b></h2>
    </div>
    <table class="table table-bordered table-responsive" width="100%" border="0" cellspacing="0" cellpadding="0">
        <thead>
            <tr>
                <th class="bg-success" width="50%">@(isEnglish ? pdfTranslations.GetString("currPosition") : pdfTranslations.GetString("currPositionFr"))</th>
                <th class="bg-info" width="50%">@(isEnglish ? pdfTranslations.GetString("selPosition") : pdfTranslations.GetString("selPositionFr"))</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="bg-success" width="50%">@CurrentPosition.JobGroupLevelCode - @(isEnglish ? CurrentPosition.JobTitleEng : CurrentPosition.JobTitleFre)</td>
                <td class="bg-info" width="50%">@ObjectivePosition.JobGroupLevelCode - @(isEnglish ? ObjectivePosition.JobTitleEng : ObjectivePosition.JobTitleFre)</td>
            </tr>
            @if (currentdescription != "" || objectivedescription != "")
            {
                <tr>
                    <td class="bg-success" width="50%">@(isEnglish ? CurrentPosition.JobDescriptionEng : CurrentPosition.JobDescriptionFre)</td>
                    <td class="bg-info" width="50%">@(isEnglish ? ObjectivePosition.JobDescriptionEng : ObjectivePosition.JobDescriptionFre)</td>
                </tr>
            }
        </tbody>
    </table>
    @if (MatchingJobLocationRegions.Any())
    {
        <div class="row col-lg-12">
            <h3>@(isEnglish ? pdfTranslations.GetString("matchRegion") : pdfTranslations.GetString("matchRegionFr"))</h3>
        </div>

            <table class="table table-responsive table-bordered">
                <thead>
                    <tr>
                        <th style="background-color:#f2f2f2">@(isEnglish ? pdfTranslations.GetString("regions") : pdfTranslations.GetString("regionsFr"))</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in MatchingJobLocationRegions)
                    {
                        <tr>
                            <td colspan="2">@(isEnglish ? pdfTranslations.GetString(c.NameEng) : pdfTranslations.GetString(c.NameFre))</td>
                        </tr>
                    }
                </tbody>
            </table>

    }
    @if (DifferingJobLocationRegions.Any())
    {
        <div class="row col-lg-12">
            <h3>@(isEnglish ? pdfTranslations.GetString("diffRegion") : pdfTranslations.GetString("diffRegionFr"))</h3>
        </div>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th style="background-color:#f2f2f2" width="70%">@(isEnglish ? pdfTranslations.GetString("regions") : pdfTranslations.GetString("regionsFr"))</th>
                    <th class="text-center bg-success">@(isEnglish ? pdfTranslations.GetString("currPosition") : pdfTranslations.GetString("currPositionFr"))</th>
                    <th class="text-center bg-info">@(isEnglish ? pdfTranslations.GetString("selPosition") : pdfTranslations.GetString("selPositionFr"))</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var d in DifferingJobLocationRegions)
                {
                    var key = "c" + d.Id.ToString();
                    <tr>
                        <td>@(isEnglish ? pdfTranslations.GetString(d.NameEng) : pdfTranslations.GetString(d.NameFre))</td>
                        <td class="text-center bg-success">
                            @(isEnglish ? d.CurrentPositionHas : ((d.CurrentPositionHas.Contains("N/A") ? pdfTranslations.GetString(d.CurrentPositionHas) : d.CurrentPositionHas)))
                        </td>
                        <td class="text-center bg-info">
                            @(isEnglish ? d.ObjectivePositionHas : ((d.ObjectivePositionHas.Contains("N/A") ? pdfTranslations.GetString(d.ObjectivePositionHas) : d.ObjectivePositionHas)))
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @if (MatchingCertificates.Any(e => e.Active != 0))
    {
        <div class="row col-lg-12">
            <h3>@(isEnglish ? pdfTranslations.GetString("matchCertifications") : pdfTranslations.GetString("matchCertificationsFr"))</h3>
        </div>
        <table class="table table-responsive table-bordered">
            <tbody>
                <tr>
                    <th style="background-color:#f2f2f2">@(isEnglish ? pdfTranslations.GetString("certifications") : pdfTranslations.GetString("certificationsFr"))</th>
                </tr>
                @foreach (var c in MatchingCertificates.Where(e => e.Active != 0))
                {
                    <tr>
                        <td>@(isEnglish ? c.NameEng : c.NameFre)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @if (DifferingCertificates.Any(e => e.Active != 0))
    {
        <div class="row col-lg-12">
            <h3>@(isEnglish ? pdfTranslations.GetString("diffCertifications") : pdfTranslations.GetString("diffCertificationsFr"))</h3>
        </div>
        <table class="table table-hover table-bordered">
            <tbody>
                <tr>
                    <th style="background-color:#f2f2f2" width="70%">@(isEnglish ? pdfTranslations.GetString("certifications") : pdfTranslations.GetString("certificationsFr"))</th>
                    <th class="text-center bg-success">@(isEnglish ? pdfTranslations.GetString("currPosition") : pdfTranslations.GetString("currPositionFr"))</th>
                    <th class="text-center bg-info">@(isEnglish ? pdfTranslations.GetString("selPosition") : pdfTranslations.GetString("selPositionFr"))</th>
                </tr>
                @foreach (var d in DifferingCertificates.Where(e => e.Active != 0))
                {
                    <tr>
                        <td width="70%">@(isEnglish ? d.NameEng : d.NameFre)</td>
                        <td class="text-center bg-success">
                            @(isEnglish ? d.CurrentPositionHas : ((d.CurrentPositionHas.Contains("N/A") ? pdfTranslations.GetString(d.CurrentPositionHas) : d.CurrentPositionHas)))
                        </td>
                        <td class="text-center bg-info">
                            @(isEnglish ? d.ObjectivePositionHas : ((d.ObjectivePositionHas.Contains("N/A") ? pdfTranslations.GetString(d.ObjectivePositionHas) : d.ObjectivePositionHas)))
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @foreach (var competencies in MatchingCompetencies)
    {
        @if (competencies.Any(e => e.Active != 0))
        {
            @if (!matchingcompetencies)
            {
                <div class="row col-lg-12">
                    <h3>@(isEnglish ? pdfTranslations.GetString("matchCompetencies") : pdfTranslations.GetString("matchCompetenciesFr"))</h3>
                </div>
                matchingcompetencies = true;
            }

            <table class="table table-hover table-bordered">
                <tbody>
                    <tr>
                        <th style="background-color:#f2f2f2" width="70%">
                            @pdfTranslations.GetString(isEnglish ? competencies.FirstOrDefault()?.TypeNameEng.ToUpper() : competencies.FirstOrDefault()?.TypeNameFre.ToUpper())
                            <small style="font-weight:normal;">
                                @((competencies.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("BEHAVIOURAL") ? @behavCompDesc : "")
                                @((competencies.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("KNOWLEDGE") ? @knowCompDesc : "")
                                @((competencies.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("TECHNICAL") ? @techCompDesc : "")
                            </small>
                        </th>
                        <th class="text-center bg-success">@(isEnglish ? pdfTranslations.GetString("currPosition") : pdfTranslations.GetString("currPositionFr"))</th>
                        <th class="text-center bg-info">@(isEnglish ? pdfTranslations.GetString("selPosition") : pdfTranslations.GetString("selPositionFr"))</th>

                        @foreach (var d in competencies.Where(e => e.Active != 0))
                        {
                            <tr>
                                <td>
                                    @(isEnglish ? d.CompetencyNameEng : d.CompetencyNameFre)
                                </td>
                                <td class="text-center bg-success">
                                    @(isEnglish ? d.RatingValueCur : ((d.RatingValueCur.Contains("N/A") ? pdfTranslations.GetString(d.RatingValueCur) : d.RatingValueCur)))
                                </td>
                                <td class="text-center bg-info">
                                    @(isEnglish ? d.RatingValueObj : ((d.RatingValueObj.Contains("N/A") ? pdfTranslations.GetString(d.RatingValueObj) : d.RatingValueObj)))
                                </td>
                            </tr>
                    }
                    </tbody>
                </table>
            }
    }
    @foreach (var competencies in DifferingCompetencies)
    {
        @if (competencies.Any(e => e.Active != 0))
        {
            @if (!differingcompetencies)
            {
                <div class="row col-lg-12">
                    <h3>@(isEnglish ? pdfTranslations.GetString("diffCompetencies") : pdfTranslations.GetString("diffCompetenciesFr"))</h3>
                </div>
                differingcompetencies = true;
            }
            <table class="table table-hover table-bordered">
                <tbody>
                    <tr>
                        <th style="background-color:#f2f2f2" width="70%">
                            @pdfTranslations.GetString(isEnglish ? competencies.FirstOrDefault()?.TypeNameEng.ToUpper() : competencies.FirstOrDefault()?.TypeNameFre.ToUpper())
                            <small style="font-weight:normal;">
                                @((competencies.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("BEHAVIOURAL") ? @behavCompDesc : "")
                                @((competencies.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("KNOWLEDGE") ? @knowCompDesc : "")
                                @((competencies.FirstOrDefault()?.TypeNameEng.ToUpper()).ToString().Contains("TECHNICAL") ? @techCompDesc : "")
                            </small>
                        </th>
                        <th class="text-center bg-success">@(isEnglish ? pdfTranslations.GetString("currPosition") : pdfTranslations.GetString("currPositionFr"))</th>
                        <th class="text-center bg-info">@(isEnglish ? pdfTranslations.GetString("selPosition") : pdfTranslations.GetString("selPositionFr"))</th>

                        @foreach (var d in competencies.Where(e => e.Active != 0))
                        {
                        <tr>
                            <td>
                                @(isEnglish ? d.CompetencyNameEng : d.CompetencyNameFre)
                            </td>
                            <td class="text-center bg-success">
                                @(isEnglish ? d.RatingValueCur : ((d.RatingValueCur.Contains("N/A") ? pdfTranslations.GetString(d.RatingValueCur) : d.RatingValueCur)))
                            </td>
                            <td class="text-center bg-info">
                                @(isEnglish ? d.RatingValueObj : ((d.RatingValueObj.Contains("N/A") ? pdfTranslations.GetString(d.RatingValueObj) : d.RatingValueObj)))
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
    }
</section>