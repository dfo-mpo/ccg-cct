@inject Web.Data.CompareService _compareService
@using Business.Dtos.Shared
@{
    Layout = "_ThemePdf";
}

@{
    var isEnglish = ViewData["Language"].ToString() == "en";
    var positionid = System.Int32.Parse(ViewData["Id"].ToString());
    var obj = System.Int32.Parse(ViewData["Obj"].ToString());
    var CurrentPosition = await _compareService.GetJobPositionById(positionid);
    var ObjectivePosition = await _compareService.GetJobPositionById(obj);
    List<SharedJobCompetencyRating[]> MatchingCompetencies = new List<SharedJobCompetencyRating[]>();
    List<SharedJobCompetencyRating[]> DifferingCompetencies = new List<SharedJobCompetencyRating[]>();
    var MatchingCertificates = await _compareService.GetMatchingCertificatesByPositionId(positionid, obj);
    var DifferingCertificates = await _compareService.GetMatchingCertificatesByPositionId(positionid, obj);
    var CompetencyTypes = await _compareService.GetAllJobCompetencyTypes();
    foreach (var competencytype in CompetencyTypes)
    {
        var anymatchingcompetencies = await _compareService.GetMatchingCompetenciesByTypeId(competencytype.Id, positionid, obj);
        if (!anymatchingcompetencies.Equals(null))
        {
            MatchingCompetencies.Add(anymatchingcompetencies);
        }
        var differingcomptencies = await _compareService.GetDifferingCompetenciesByTypeId(competencytype.Id, positionid, obj);
        if (!differingcomptencies.Equals(null))
        {
            DifferingCompetencies.Add(differingcomptencies);
        }
    }
    var CERTIFICATIONS = isEnglish ? "CERTIFICATIONS" : "ATTESTATIONS";
    var level = isEnglish ? "Level" : "Niveau";
    var positiondetails = isEnglish ? "POSITION DETAILS" : "DÉTAILS DU POSTE";
    var h2Results = isEnglish ? "Results Comparing Two Positions" : "Résultats comparant deux positions";
    var currentposition = isEnglish ? "Current Position" : "Position actuelle";
    var selectedposition = isEnglish ? "Selected Position" : "Position sélectionnée";
    var DIFFERINGCOMPETENCIES = isEnglish ? "DIFFERING COMPETENCIES" : "COMPÉTENCES DIFFÉRENTES";
    var MATCHINGCOMPETENCIES = isEnglish ? "MATCHING COMPETENCIES" : "COMPÉTENCES ASSOCIÉES";
    var matchingcompetencies = false;
    var differingcompetencies = false;
}
    <section role="contentinfo">
        <div class="row text-center mrgn-bttm-lg">
            <h2><b>@h2Results</b></h2>
        </div>
        <table class="table table-bordered table-responsive" width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
                <tr>
                    <td class="bg-success" width="50%"><b>@currentposition</b> @CurrentPosition.JobGroupCode @CurrentPosition.JobGroupLevelValue - @(isEnglish ? CurrentPosition.JobTitleEng : CurrentPosition.JobTitleFre)</td>
                    <td class="bg-info" width="50%"><b>@selectedposition</b> @ObjectivePosition.JobGroupCode @ObjectivePosition.JobGroupLevelValue - @(isEnglish ? ObjectivePosition.JobTitleEng : ObjectivePosition.JobTitleFre)</td>
                </tr>
            </tbody>
        </table>
        @if (MatchingCertificates.Any(e => e.Active != 0))
        {
            <div class="row col-lg-12">
                <h3>@MATCHINGCOMPETENCIES</h3>
            </div>
            matchingcompetencies = true;
            <div class="col-md-6">
                <table class="table table-responsive table-bordered">
                    <tbody>
                        <tr>
                            <th style="background-color:#f2f2f2">@CERTIFICATIONS</th>
                        </tr>
                        @foreach (var c in MatchingCertificates.Where(e => e.Active != 0))
                        {
                                <tr>
                                    <td>@(isEnglish ? c.NameEng : c.NameFre)</td>
                                </tr>
                            }
                        </tbody>
                </table>
            </div>
        }
        @foreach (var competencies in MatchingCompetencies)
        {
            @if (competencies.Any(e => e.Active != 0))
            {
                @if (!matchingcompetencies)
                {
                    <div class="row col-lg-12">
                        <h3>@MATCHINGCOMPETENCIES</h3>
                    </div>
                    matchingcompetencies = true;
                }

                <table class="table table-hover table-bordered">
                    <tbody>
                        <tr>
                            <th style="background-color:#f2f2f2" width="70%">@(isEnglish ? competencies.FirstOrDefault()?.TypeNameEng.ToUpper() : competencies.FirstOrDefault()?.TypeNameFre.ToUpper())</th>
                            <th class="text-center bg-success">@currentposition</th>
                            <th class="text-center bg-info">@selectedposition</th>

                            @foreach (var d in competencies.Where(e => e.Active != 0))
                            {
                            <tr>
                                <td>
                                    @(isEnglish ? d.CompetencyNameEng : d.CompetencyNameFre)
                                </td>
                                <td class="text-center bg-success">
                                    @d.RatingValueCur
                                </td>
                                <td class="text-center bg-info">
                                    @d.RatingValueObj
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                }
        }
        @if (DifferingCertificates.Any(e => e.Active != 0))
        {
            <div class="row col-lg-12">
                <h3>@DIFFERINGCOMPETENCIES</h3>
            </div>
            differingcompetencies = true;
            <table class="table table-hover table-bordered">
                <tbody>
                    <tr>
                        <th style="background-color:#f2f2f2" width="70%">@CERTIFICATIONS</th>
                        <th class="text-center bg-success">@currentposition</th>
                        <th class="text-center bg-info">@selectedposition</th>
                    </tr>
                    @foreach (var d in DifferingCertificates.Where(e => e.Active != 0))
                    {
                            <tr>
                                <td width="70%">@d.NameEng</td>
                                <td class="text-center bg-success">&nbsp;</td>
                                <td class="text-center bg-info">&nbsp;</td>
                            </tr>
                        }
                    </tbody>
            </table>
        }
        @foreach (var competencies in DifferingCompetencies)
        {
            @if (competencies.Any(e => e.Active != 0))
            {
                @if (!differingcompetencies)
                {
                    <div class="row col-lg-12">
                        <h3>@DIFFERINGCOMPETENCIES</h3>
                    </div>
                    differingcompetencies = true;
                }
                <table class="table table-hover table-bordered">
                    <tbody>
                        <tr>
                            <th style="background-color:#f2f2f2" width="70%">@(isEnglish ? competencies.FirstOrDefault()?.TypeNameEng.ToUpper() : competencies.FirstOrDefault()?.TypeNameFre.ToUpper())</th>
                            <th class="text-center bg-success">@currentposition</th>
                            <th class="text-center bg-info">@selectedposition</th>

                            @foreach (var d in competencies.Where(e => e.Active != 0))
                            {
                            <tr>
                                <td>
                                    @(isEnglish ? d.CompetencyNameEng : d.CompetencyNameFre)
                                </td>
                                <td class="text-center bg-success">
                                    @d.RatingValueCur
                                </td>
                                <td class="text-center bg-info">
                                    @d.RatingValueObj
                                </td>
                            </tr>
                                }
                        </tbody>
                    </table>
                }
        }
    </section>