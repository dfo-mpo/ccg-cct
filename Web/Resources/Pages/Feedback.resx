<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="areacode" xml:space="preserve">
    <value>including area code (for example, 999-999-9999)</value>
  </data>
  <data name="Comp definitions elaborate" xml:space="preserve">
    <value>If you listed competencies with definitions you think should be changed, please elaborate with your wording change recommendations, and why.</value>
  </data>
  <data name="Comp definitions rating" xml:space="preserve">
    <value>In your review of a given position competency profile in the CCT, were the listed competency definitions rated correctly? (i.e. the scores of 1-5).</value>
  </data>
  <data name="Comp rating if no" xml:space="preserve">
    <value>If no, which ones, and why?</value>
  </data>
  <data name="ContactInfo" xml:space="preserve">
    <value>Please provide information that we could use to contact you</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>E-mail address</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>Feedback Form</value>
  </data>
  <data name="FormTitle" xml:space="preserve">
    <value>Career Competency Tool (CCT)</value>
  </data>
  <data name="Home phone" xml:space="preserve">
    <value>Home phone number</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="one-added" xml:space="preserve">
    <value>One or more should be added</value>
  </data>
  <data name="one-removed" xml:space="preserve">
    <value>One or more should be removed</value>
  </data>
  <data name="para1" xml:space="preserve">
    <value>Please note that these competencies are the fruit of much research and consultation. Requests to change competencies and ratings may result in negative consequences elsewhere in the tool, since many competencies are necessarily linked. We will action areas of many similar recommendations rather than one-offs. In your feedback, please be very specific, referencing specific competencies or positions.</value>
  </data>
  <data name="para2" xml:space="preserve">
    <value>If you have difficulty with the following form, you can email your comments to &lt;a href="mailto:DFO.CCG.ForceGen-GCC.GenPersonnel.MPO@dfo-mpo.gc.ca"&gt;DFO.CCG.ForceGen-GCC.GenPersonnel.MPO@dfo-mpo.gc.ca&lt;/a&gt;. Please read the &lt;a href="#pics-ecrp"&gt;Personal Information Collection Statement&lt;/a&gt; before completing this form.</value>
  </data>
  <data name="PICS" xml:space="preserve">
    <value>Personal Information Collection Statement</value>
  </data>
  <data name="PICS-para" xml:space="preserve">
    <value>All personal information created, held or collected by this department is protected under the &lt;a href="http://laws-lois.justice.gc.ca/eng/acts/P-21/index.html" rel="external"&gt;&lt;em&gt;Privacy Act&lt;/em&gt;&lt;/a&gt;. This means that you will be informed of the purpose for which it is being collected and how to exercise your right of access to that information. You will be asked for your consent where appropriate.</value>
  </data>
  <data name="Public Communications" xml:space="preserve">
    <value>Public Communications</value>
  </data>
  <data name="Public-para1" xml:space="preserve">
    <value>Provision of the information requested on this form is voluntary. The personal information you include in an inquiry may be used to prepare a reply. The personal information is collected pursuant to the &lt;em class="highlight"&gt;[appropriate provision in department’s enabling statute]&lt;/em&gt;. Such information may be used for statistical, evaluation and reporting purposes. The information is included in the personal information bank &lt;em class="highlight"&gt;[&lt;abbr title="personal information bank"&gt;PIB&lt;/abbr&gt; Number - &lt;abbr title="personal information bank"&gt;PIB&lt;/abbr&gt; Title]&lt;/em&gt;. The information may be shared with programs and activities of &lt;em class="highlight"&gt;[Applied Title of the Department]&lt;/em&gt; should your inquiry pertain to a specific program or activity of the department. In such cases, the information is included in the personal information bank of the program or activity.</value>
  </data>
  <data name="Public-para2" xml:space="preserve">
    <value>If after reading this statement, you prefer not to submit your inquiry via the Internet, you can email your comments to &lt;a href="mailto:DFO.CCG.ForceGen-GCC.GenPersonnel.MPO@dfo-mpo.gc.ca"&gt;DFO.CCG.ForceGen-GCC.GenPersonnel.MPO@dfo-mpo.gc.ca&lt;/a&gt;</value>
  </data>
  <data name="Q1-certcorrect" xml:space="preserve">
    <value>In your review of a given position’s competency profile in the CCT, were the certifications correct? (i.e. the right certifications listed overall for a position).</value>
  </data>
  <data name="Q1-comp if no" xml:space="preserve">
    <value>If no:</value>
  </data>
  <data name="Q1-comp listing" xml:space="preserve">
    <value>In your review of a given position’s competency profile in the CCT, were the competencies listed appropriate? (i.e. the right Knowledge, Technical, Behavioural competencies overall for a position).</value>
  </data>
  <data name="Q1-if no" xml:space="preserve">
    <value>If no, what needs correction?</value>
  </data>
  <data name="Q2-comp definitions" xml:space="preserve">
    <value>In your review of a given position’s competency profile in the CCT, were the listed competency definitions written correctly? (i.e. the written Knowledge, Technical, Behavioural overall definitions, and the written level descriptions).</value>
  </data>
  <data name="Q2-comp definitions if no" xml:space="preserve">
    <value>If no, which ones?</value>
  </data>
  <data name="required" xml:space="preserve">
    <value>(required)</value>
  </data>
  <data name="sectioncert" xml:space="preserve">
    <value>Certifications</value>
  </data>
  <data name="sectioncomp" xml:space="preserve">
    <value>Competencies</value>
  </data>
  <data name="sectionContact" xml:space="preserve">
    <value>Contact Information</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Change Request Form</value>
  </data>
  <data name="which-added" xml:space="preserve">
    <value>Which one/s should be added?</value>
  </data>
  <data name="which-removed" xml:space="preserve">
    <value>Which one/s should be removed?</value>
  </data>
  <data name="Work ext" xml:space="preserve">
    <value>Work phone number extension</value>
  </data>
  <data name="Work phone" xml:space="preserve">
    <value>Work phone number</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>