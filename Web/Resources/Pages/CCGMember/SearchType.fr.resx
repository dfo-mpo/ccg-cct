<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Available" xml:space="preserve">
    <value>Quels postes sont disponibles pour moi maintenant</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Catégories</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="Compare" xml:space="preserve">
    <value>Comparer ma position à une autre position</value>
  </data>
  <data name="Compare Function" xml:space="preserve">
    <value>La fonction de comparaison</value>
  </data>
  <data name="contcompare" xml:space="preserve">
    <value>Continuer à comparer</value>
  </data>
  <data name="contsimilar" xml:space="preserve">
    <value>Continuer vers la recherche similaire</value>
  </data>
  <data name="Current Position" xml:space="preserve">
    <value>Poste actuelle</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="infocompare" xml:space="preserve">
    <value>Cliquez ici pour plus d'informations sur la fonction comparer</value>
  </data>
  <data name="infosimilar" xml:space="preserve">
    <value>Cliquez ici pour plus d'informations sur la fonction de recherche similaire</value>
  </data>
  <data name="modalcompare" xml:space="preserve">
    <value>&lt;p&gt;Cette fonction vous permet de comparer votre poste actuellement sélectionné avec tout autre poste de la Garde côtière canadienne. En le sélectionnant, puis en un autre poste, la fonction produira les deux résultats de poste côte à côte afin que vous puissiez voir les différences d'emplacement, de certification, de compétences et d'évaluation. Si le poste auquel vous vous comparez est celui que vous recherchez, vous pouvez alors télécharger les résultats, les sauvegarder ou les imprimer, comme base d'un plan de formation.&lt;/p&gt;</value>
  </data>
  <data name="modalsimilar" xml:space="preserve">
    <value>&lt;p&gt;Cette fonctionnalité vous permet de trouver des postes similaires à celui que vous avez déjà sélectionné. La recherche donnera des résultats en pourcentage par fonctionnalité (par exemple, ingénierie, administratif, logistique, etc.). Les résultats peuvent ne pas être au même niveau de rémunération que le poste que vous avez déjà sélectionné.&lt;/p&gt;
                    &lt;p&gt;Si le poste auquel vous comparez (c'est-à-dire le poste que vous avez déjà sélectionné) est associé à des certificats, une case vous proposera de cliquer sur les certificats. Si vous cliquez sur un ou plusieurs, la recherche similaire produira des postes avec ces certifications, quel que soit le niveau.&lt;/p&gt;
                    &lt;p&gt;Si vous ne sélectionnez pas de certificat ou si le poste auquel vous comparez n'a pas de certificat associé, vous pouvez simplement cliquer sur un pourcentage de correspondance. En cliquant sur 100%, vous obtiendrez des résultats au même niveau de classification, de niveau et de niveaux inférieurs et supérieurs. Si vous cliquez sur d'autres pourcentages, les résultats seront des positions de fonctionnalité similaire, mais pas de niveau.&lt;/p&gt;
                    &lt;p&gt;Si vous cliquez sur une certification ET un pourcentage, la recherche similaire ne produira que des postes avec ces certifications, quel que soit le niveau.&lt;/p&gt;</value>
  </data>
  <data name="PhotoCompare" xml:space="preserve">
    <value>Photo de deux postes au sein de la Garde côtière canadienne</value>
  </data>
  <data name="PhotoSimilar" xml:space="preserve">
    <value>Photo de quatre postes au sein de la Garde côtière canadienne</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Précédent</value>
  </data>
  <data name="Question1" xml:space="preserve">
    <value>Comment souhaitez-vous effectuer votre recherche?</value>
  </data>
  <data name="Search Type" xml:space="preserve">
    <value>Type de recherche</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Sélectionnez</value>
  </data>
  <data name="Similar" xml:space="preserve">
    <value>Trouver des postes similaires à mon poste actuel</value>
  </data>
  <data name="Similar Function" xml:space="preserve">
    <value>Fonction de recherche similaire</value>
  </data>
  <data name="textinfocompare" xml:space="preserve">
    <value>(cliquez ici pour plus d'informations sur la fonction comparer)</value>
  </data>
  <data name="textinfosimilar" xml:space="preserve">
    <value>(cliquez ici pour plus d'informations sur la fonction de recherche similaire)</value>
  </data>
</root>