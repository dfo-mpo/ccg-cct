<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Certifications" xml:space="preserve">
    <value>Certifications</value>
  </data>
  <data name="CertText" xml:space="preserve">
    <value>Certifications indicate having successfully completed a given training program. Some certifications may vary or change, even across the same classification level.</value>
  </data>
  <data name="Competencies" xml:space="preserve">
    <value>Competencies</value>
  </data>
  <data name="CompLevel" xml:space="preserve">
    <value>Competency levels</value>
  </data>
  <data name="CompText" xml:space="preserve">
    <value>&lt;p&gt;Each position includes a breakdown of the competencies required. This information is compiled from the competencies included in job posters for that position, over the past few years. Each competency has a minimum level of proficiency needed for the position. Job competencies are divided into three sections:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;b&gt;Knowledge elements&lt;/b&gt; are practical or theoretical understanding of a subject. It is the information you need (from past experience or education) to succeed in the position.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Technical elements&lt;/b&gt; describe abilities to apply knowledge to efficiently perform the job.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Behaviour elements&lt;/b&gt; are the behaviours or attitudes needed for any job with the &lt;abbr title="Canadian Coast Guard"&gt;CCG&lt;/abbr&gt;. Seven behaviour elements and a level of competency required for each job are included in the tool.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;The competencies may evolve as job requirements change within the &lt;abbr title="Canadian Coast Guard"&gt;CCG&lt;/abbr&gt;.&lt;/p&gt;</value>
  </data>
  <data name="continue" xml:space="preserve">
    <value>Click here to begin</value>
  </data>
  <data name="Intro" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="IntroText" xml:space="preserve">
    <value>&lt;p&gt;The Canadian Coast Guard (CCG)’s Career Competency Tool (CCT) is an online tool that provides information about the requirements for jobs across the coast guard. The tool is for both existing &lt;abbr title="Canadian Coast Guard"&gt;CCG&lt;/abbr&gt; employees and those interested in working for the &lt;abbr title="Canadian Coast Guard"&gt;CCG&lt;/abbr&gt;. For &lt;abbr title="Canadian Coast Guard"&gt;CCG&lt;/abbr&gt; members, the tool empowers you to take charge of your own career development.&lt;/p&gt;
&lt;p&gt;Once you identify a position, the tool also allows you to find similar positions or compare the job requirements to other positions within the &lt;abbr title="Canadian Coast Guard"&gt;CCG&lt;/abbr&gt;. For each position, the tool provides:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a brief description&lt;/li&gt;
&lt;li&gt;a list of regions that offer the position&lt;/li&gt;
&lt;li&gt;certifications required&lt;/li&gt;
&lt;li&gt;a list of necessary competencies along with the level of proficiency required&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="levels" xml:space="preserve">
    <value>&lt;p&gt;Each competency is assigned a level. These levels are based on the knowledge and skills required for each position.&lt;/p&gt;&lt;p&gt;These levels range from 1 to 5:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 = &lt;b&gt;fundamental awareness&lt;/b&gt; (common knowledge or an understanding of basic techniques and concepts)&lt;/li&gt;&lt;li&gt;2 = &lt;b&gt;novice&lt;/b&gt; (a level of experience has been obtained; may need help when performing a task/skill)&lt;/li&gt;&lt;li&gt;3 = &lt;b&gt;intermediate&lt;/b&gt; (able to successfully complete the necessary tasks in this competency. Some assistance may still be needed but can usually perform the task independently)&lt;/li&gt;&lt;li&gt;4 = &lt;b&gt;advanced&lt;/b&gt; (performs the actions associated with this skill without assistance. Able to provide assistance to other colleagues when questions arise regarding this skill)&lt;/li&gt;&lt;li&gt;5 = &lt;b&gt;expert&lt;/b&gt; (provides guidance, troubleshoots, and answer questions related to this area of expertise and the field where the skill is used)&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Career Competency Tool Overview</value>
  </data>
  <data name="You are here:" xml:space="preserve">
    <value>You are here:</value>
  </data>
</root>